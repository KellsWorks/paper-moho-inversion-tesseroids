         2310514 function calls (2180215 primitive calls) in 42.133 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        9   39.229    4.359   42.059    4.673 tesseroid.py:324(_forward_model)
    18198    0.138    0.000    0.357    0.000 context.py:139(resolve_data_type)
    18000    0.132    0.000    0.238    0.000 mohoinv.py:476(__getitem__)
    18120    0.121    0.000    0.121    0.000 __init__.py:501(cast)
        8    0.113    0.014    0.113    0.014 executionengine.py:93(finalize_object)
   371163    0.110    0.000    0.111    0.000 {isinstance}
     9716    0.102    0.000    0.209    0.000 instructions.py:12(__init__)
69565/49934    0.088    0.000    0.154    0.000 {method 'format' of 'str' objects}
        8    0.087    0.011    0.087    0.011 passmanagers.py:26(run)
    61709    0.082    0.000    0.119    0.000 StringIO.py:208(write)
    18000    0.076    0.000    0.098    0.000 mesher.py:527(__init__)
30960/21244    0.073    0.000    0.551    0.000 {print}
     9950    0.061    0.000    0.442    0.000 values.py:141(__str__)
    18104    0.055    0.000    0.176    0.000 ctypes_utils.py:40(is_ctypes_funcptr)
    18009    0.049    0.000    0.316    0.000 mohoinv.py:469(next)
86355/36418    0.044    0.000    0.044    0.000 _utils.py:26(is_used)
    18023    0.043    0.000    0.420    0.000 context.py:121(resolve_argument_type)
    18000    0.040    0.000    0.053    0.000 tesseroid.py:262(_check_tesseroid)
       16    0.039    0.002    0.039    0.002 executionengine.py:69(get_pointer_to_global)
    12290    0.038    0.000    0.067    0.000 _utils.py:41(deduplicate)
     7770    0.037    0.000    0.099    0.000 templates.py:104(_rate_arguments)
    22657    0.033    0.000    0.033    0.000 types.py:182(__str__)
    18026    0.031    0.000    0.465    0.000 dispatcher.py:205(typeof_pyval)
    36000    0.026    0.000    0.026    0.000 mesher.py:543(get_bounds)
       24    0.024    0.001    0.025    0.001 module.py:11(parse_assembly)
    20602    0.023    0.000    0.061    0.000 values.py:167(get_reference)
    18000    0.022    0.000    0.022    0.000 mesher.py:48(__init__)
    18020    0.022    0.000    0.029    0.000 mohoinv.py:458(size)
     1045    0.022    0.000    0.172    0.000 templates.py:127(resolve_overload)
      159    0.022    0.000    0.022    0.000 passmanagers.py:50(run)
24523/24490    0.021    0.000    0.021    0.000 {getattr}
    12093    0.020    0.000    0.130    0.000 values.py:132(__init__)
    15481    0.020    0.000    0.024    0.000 templates.py:94(__add__)
15554/15531    0.018    0.000    0.048    0.000 context.py:332(type_compatibility)
19666/841    0.017    0.000    0.591    0.001 {method 'join' of 'str' objects}
26274/25608    0.017    0.000    0.020    0.000 types.py:99(__eq__)
    12449    0.016    0.000    0.112    0.000 values.py:159(name)
   102703    0.015    0.000    0.015    0.000 {method 'append' of 'list' objects}
    10109    0.015    0.000    0.019    0.000 StringIO.py:258(getvalue)
     8368    0.015    0.000    0.040    0.000 {_functools.reduce}
    10109    0.014    0.000    0.018    0.000 StringIO.py:54(__init__)
    20602    0.014    0.000    0.034    0.000 values.py:33(_wrapname)
      968    0.014    0.000    0.025    0.000 interpreter.py:286(_compute_var_disposal)
     1468    0.013    0.000    0.046    0.000 instructions.py:50(__init__)
103411/99338    0.012    0.000    0.014    0.000 {len}
    38752    0.012    0.000    0.012    0.000 templates.py:83(__init__)
      987    0.011    0.000    0.559    0.001 values.py:468(descr)
     1437    0.010    0.000    0.027    0.000 interpreter.py:492(store)
    12802    0.010    0.000    0.010    0.000 {zip}
    23395    0.010    0.000    0.010    0.000 {method 'replace' of 'str' objects}
    18104    0.010    0.000    0.016    0.000 numpy_support.py:147(is_array)
    71818    0.010    0.000    0.010    0.000 StringIO.py:38(_complain_ifclosed)
     9716    0.010    0.000    0.014    0.000 builder.py:92(_insert)
    12449    0.010    0.000    0.029    0.000 _utils.py:34(register)
       66    0.010    0.000    0.010    0.000 module.py:89(verify)
6446/1141    0.009    0.000    0.015    0.000 ir.py:102(_rec_list_vars)
15475/10444    0.009    0.000    0.070    0.000 types.py:108(__str__)
2960/1492    0.009    0.000    0.047    0.000 contextlib.py:21(__exit__)
  828/132    0.008    0.000    1.084    0.008 typeinfer.py:227(resolve)
     1468    0.008    0.000    0.072    0.000 instructions.py:86(descr)
2595/2541    0.008    0.000    0.030    0.000 {map}
    13212    0.007    0.000    0.007    0.000 {numba.typeconv._typeconv.check_compatible}
        8    0.007    0.001    0.021    0.003 iterative.py:279(cgs)
        1    0.007    0.007    0.013    0.013 regularization.py:636(fd2d)
    13212    0.007    0.000    0.014    0.000 typeconv.py:16(check_compatible)
8704/5486    0.007    0.000    0.011    0.000 types.py:96(__hash__)
     2451    0.007    0.000    0.047    0.000 builder.py:306(load)
     1341    0.007    0.000    0.015    0.000 {sorted}
     5041    0.006    0.000    0.009    0.000 typeinfer.py:318(__getitem__)
5282/5256    0.006    0.000    0.017    0.000 values.py:94(get_reference)
5377/2976    0.006    0.000    0.056    0.000 manager.py:22(lookup)
    18047    0.006    0.000    0.006    0.000 mohoinv.py:439(relief)
     2451    0.006    0.000    0.050    0.000 instructions.py:274(descr)
    10109    0.006    0.000    0.011    0.000 _utils.py:9(__exit__)
     3057    0.006    0.000    0.006    0.000 {numpy.core.multiarray.array}
    10109    0.006    0.000    0.006    0.000 StringIO.py:81(close)
     2084    0.005    0.000    0.005    0.000 {method 'match' of '_sre.SRE_Pattern' objects}
6442/6413    0.005    0.000    0.009    0.000 types.py:114(__eq__)
    15913    0.005    0.000    0.015    0.000 {method 'get' of 'dict' objects}
1646/1079    0.005    0.000    0.027    0.000 types.py:44(__call__)
     2960    0.005    0.000    0.008    0.000 contextlib.py:82(helper)
    10852    0.005    0.000    0.005    0.000 {method 'insert' of 'list' objects}
     1796    0.005    0.000    0.008    0.000 typeinfer.py:41(add_types)
2960/1478    0.005    0.000    0.046    0.000 contextlib.py:15(__enter__)
     5991    0.005    0.000    0.006    0.000 types.py:178(__init__)
       21    0.005    0.000    0.011    0.001 linker.py:6(link_modules)
    23550    0.005    0.000    0.005    0.000 values.py:155(name)
     1366    0.004    0.000    0.019    0.000 interpreter.py:364(_iter_inst)
     1572    0.004    0.000    0.008    0.000 tokenize.py:287(generate_tokens)
     2053    0.004    0.000    0.008    0.000 models.py:185(__init__)
     8495    0.004    0.000    0.005    0.000 instructions.py:20(_stringify_metatdata)
     1468    0.004    0.000    0.053    0.000 builder.py:356(call)
     2451    0.004    0.000    0.036    0.000 instructions.py:270(__init__)
       11    0.004    0.000    0.053    0.005 interpreter.py:242(_insert_var_dels)
     1231    0.004    0.000    0.037    0.000 instructions.py:287(descr)
    18000    0.004    0.000    0.004    0.000 mohoinv.py:435(bottom)
    18000    0.004    0.000    0.004    0.000 mohoinv.py:431(top)
     1355    0.004    0.000    0.044    0.000 interpreter.py:459(_dispatch)
     7995    0.004    0.000    0.004    0.000 {locals}
     1776    0.004    0.000    0.015    0.000 cgutils.py:300(goto_entry_block)
    23047    0.004    0.000    0.004    0.000 types.py:85(key)
     4493    0.004    0.000    0.006    0.000 models.py:141(__init__)
     1358    0.004    0.000    0.010    0.000 models.py:178(__init__)
      968    0.003    0.000    0.008    0.000 interpreter.py:267(_patch_var_disposal)
15227/11974    0.003    0.000    0.006    0.000 {hash}
      888    0.003    0.000    0.042    0.000 cgutils.py:307(alloca_once)
     1332    0.003    0.000    0.329    0.000 lowering.py:183(lower_inst)
       11    0.003    0.000    0.005    0.000 interpreter.py:160(_compute_live_variables)
     1004    0.003    0.000    0.061    0.000 objmode.py:564(decref)
      561    0.003    0.000    0.026    0.000 instructions.py:333(descr)
       11    0.003    0.000    0.019    0.002 controlflow.py:508(run)
     1053    0.003    0.000    0.046    0.000 pythonapi.py:71(decref)
    20905    0.003    0.000    0.003    0.000 {method 'add' of 'set' objects}
      561    0.003    0.000    0.092    0.000 instructions.py:315(__init__)
     1231    0.003    0.000    0.026    0.000 builder.py:314(store)
      208    0.003    0.000    0.003    0.000 {scipy.sparse._sparsetools.csr_matvec}
     4502    0.003    0.000    0.004    0.000 types.py:191(format_const)
     7077    0.003    0.000    0.003    0.000 utils.py:113(__getitem__)
    16287    0.003    0.000    0.003    0.000 builder.py:63(block)
      584    0.003    0.000    0.031    0.000 cgutils.py:375(ifthen)
2260/2206    0.003    0.000    0.032    0.000 types.py:329(structure_repr)
     1510    0.003    0.000    0.003    0.000 ir.py:32(__init__)
     3570    0.003    0.000    0.008    0.000 types.py:35(as_pointer)
     3763    0.003    0.000    0.005    0.000 types.py:103(__init__)
     1661    0.003    0.000    0.017    0.000 base.py:295(get_value_type)
     2894    0.003    0.000    0.006    0.000 cgutils.py:284(goto_block)
      133    0.003    0.000    0.018    0.000 dataflow.py:28(run_on_block)
      181    0.003    0.000    0.038    0.000 cgutils.py:77(__init__)
3612/1632    0.003    0.000    0.004    0.000 argpacker.py:112(_flatten)
     2952    0.003    0.000    0.003    0.000 values.py:170(function_type)
     5377    0.003    0.000    0.003    0.000 models.py:32(__init__)
     3491    0.003    0.000    0.019    0.000 instructions.py:87(<genexpr>)
 1045/162    0.003    0.000    1.087    0.007 context.py:55(resolve_function_type)
     1451    0.003    0.000    0.005    0.000 ir.py:505(define)
      930    0.003    0.000    0.007    0.000 ir.py:527(get_or_define)
     4981    0.003    0.000    0.004    0.000 types.py:185(__eq__)
     3025    0.003    0.000    0.004    0.000 bytecode.py:288(__getitem__)
      511    0.003    0.000    0.011    0.000 types.py:851(__init__)
     2960    0.003    0.000    0.003    0.000 contextlib.py:12(__init__)
     3990    0.003    0.000    0.003    0.000 controlflow.py:52(__hash__)
     1747    0.003    0.000    0.006    0.000 interpreter.py:507(get)
     2741    0.003    0.000    0.004    0.000 values.py:86(__init__)
      126    0.003    0.000    0.006    0.000 compressed.py:126(check_format)
     3331    0.003    0.000    0.009    0.000 types.py:154(<genexpr>)
       22    0.002    0.000    0.003    0.000 controlflow.py:292(_find_dominators_internal)
     1468    0.002    0.000    0.017    0.000 types.py:152(__str__)
    17027    0.002    0.000    0.002    0.000 {method 'extend' of 'list' objects}
     1358    0.002    0.000    0.013    0.000 dataflow.py:77(dispatch)
  350/341    0.002    0.000    0.018    0.000 models.py:307(__init__)
      162    0.002    0.000    0.004    0.000 values.py:16(_escape_string)
     7755    0.002    0.000    0.002    0.000 templates.py:88(astuple)
     2559    0.002    0.000    0.002    0.000 controlflow.py:206(topo_sort)
      768    0.002    0.000    0.021    0.000 instructions.py:107(descr)
     1830    0.002    0.000    0.003    0.000 cgutils.py:272(get_function)
      871    0.002    0.000    0.007    0.000 bytecode.py:227(next)
      236    0.002    0.000    0.023    0.000 module.py:18(add_metadata)
     1017    0.002    0.000    0.020    0.000 builder.py:292(alloca)
     3221    0.002    0.000    0.007    0.000 types.py:38(__ne__)
      420    0.002    0.000    0.010    0.000 builder.py:332(branch)
     2381    0.002    0.000    0.002    0.000 ir.py:450(__init__)
     2648    0.002    0.000    0.016    0.000 values.py:91(__str__)
     3236    0.002    0.000    0.002    0.000 controlflow.py:180(in_loops)
      799    0.002    0.000    0.005    0.000 models.py:192(__init__)
      159    0.002    0.000    0.017    0.000 values.py:347(__init__)
      385    0.002    0.000    0.006    0.000 sputils.py:130(get_index_dtype)
     1453    0.002    0.000    0.004    0.000 core.py:78(function)
     3270    0.002    0.000    0.003    0.000 builder.py:85(position_at_end)
     9956    0.002    0.000    0.002    0.000 {method 'rstrip' of 'str' objects}
      547    0.002    0.000    0.015    0.000 instructions.py:384(descr)
      987    0.002    0.000    0.011    0.000 values.py:455(__init__)
      937    0.002    0.000    0.002    0.000 {method 'index' of 'list' objects}
     1231    0.002    0.000    0.020    0.000 instructions.py:283(__init__)
     1195    0.002    0.000    0.012    0.000 cgutils.py:117(__setattr__)
       83    0.002    0.000    0.080    0.001 objmode.py:540(cleanup_vars)
      594    0.002    0.000    0.039    0.000 lowering.py:614(storevar)
      133    0.002    0.000    0.003    0.000 interpreter.py:394(_remove_unused_temporaries)
     1017    0.002    0.000    0.016    0.000 instructions.py:297(__init__)
      987    0.002    0.000    0.004    0.000 builder.py:96(_set_terminator)
      987    0.002    0.000    0.013    0.000 values.py:369(append_basic_block)
     1478    0.002    0.000    0.002    0.000 types.py:147(__init__)
     1762    0.002    0.000    0.015    0.000 typeinfer.py:503(constrain_statement)
     1372    0.002    0.000    0.006    0.000 controlflow.py:569(_iter_inst)
      385    0.002    0.000    0.002    0.000 getlimits.py:244(__init__)
      818    0.002    0.000    0.005    0.000 base.py:75(_match_arglist)
       24    0.002    0.000    0.006    0.000 dia.py:247(tocoo)
      547    0.002    0.000    0.009    0.000 instructions.py:369(__init__)
     2232    0.002    0.000    0.009    0.000 instructions.py:109(<genexpr>)
       11    0.002    0.000    0.124    0.011 interpreter.py:146(interpret)
      547    0.002    0.000    0.012    0.000 builder.py:372(extract_value)
      852    0.002    0.000    0.012    0.000 values.py:114(__eq__)
     1045    0.002    0.000    0.174    0.000 templates.py:185(_select)
    10109    0.002    0.000    0.002    0.000 _utils.py:6(__enter__)
     4119    0.002    0.000    0.002    0.000 {method 'startswith' of 'str' objects}
     1832    0.002    0.000    0.003    0.000 core.py:62(int)
      561    0.002    0.000    0.094    0.000 builder.py:364(gep)
     26/5    0.002    0.000    1.089    0.218 typeinfer.py:104(propagate)
      987    0.002    0.000    0.015    0.000 instructions.py:102(__init__)
     1788    0.002    0.000    0.003    0.000 _abcoll.py:398(itervalues)
      314    0.002    0.000    0.252    0.001 lowering.py:452(lower_expr)
     2936    0.002    0.000    0.002    0.000 instructions.py:72(args)
      424    0.002    0.000    0.009    0.000 instructions.py:206(descr)
      500    0.002    0.000    0.002    0.000 ir.py:145(__init__)
     1036    0.002    0.000    0.003    0.000 base.py:90(_match)
     2234    0.002    0.000    0.002    0.000 typeinfer.py:81(get)
     3418    0.002    0.000    0.002    0.000 types.py:138(__eq__)
      513    0.002    0.000    0.013    0.000 instructions.py:33(descr)
        5    0.002    0.000    0.002    0.000 module.py:156(clone)
      633    0.002    0.000    0.003    0.000 interpreter.py:32(assign)
     1361    0.002    0.000    0.002    0.000 controlflow.py:576(_use_new_block)
      400    0.002    0.000    0.012    0.000 interface.py:189(matvec)
     2744    0.002    0.000    0.011    0.000 types.py:290(__str__)
      513    0.002    0.000    0.009    0.000 builder.py:18(wrapped)
     1017    0.002    0.000    0.014    0.000 instructions.py:302(descr)
      409    0.002    0.000    0.010    0.000 builder.py:192(_icmp)
      786    0.002    0.000    0.011    0.000 typeinfer.py:529(typeof_assign)
        7    0.002    0.000    0.049    0.007 typeinfer.py:434(get_function_types)
      236    0.002    0.000    0.030    0.000 cgutils.py:348(set_branch_weight)
      133    0.001    0.000    0.002    0.000 macro.py:36(module_getattr_folding)
     1608    0.001    0.000    0.003    0.000 core.py:103(int)
     2262    0.001    0.000    0.003    0.000 {method 'update' of 'set' objects}
     1212    0.001    0.000    0.002    0.000 dataflow.py:570(make_temp)
     1198    0.001    0.000    0.001    0.000 collections.py:59(__setitem__)
       90    0.001    0.000    0.465    0.005 lowering.py:140(lower_block)
      594    0.001    0.000    0.260    0.000 lowering.py:297(lower_assign)
      584    0.001    0.000    0.007    0.000 cgutils.py:875(add_postfix)
        7    0.001    0.000    0.011    0.002 tokenize.py:175(tokenize_loop)
     1608    0.001    0.000    0.002    0.000 ir.py:579(append)
      724    0.001    0.000    0.001    0.000 typeinfer.py:323(__setitem__)
     1747    0.001    0.000    0.002    0.000 interpreter.py:51(get_assignment_source)
     2441    0.001    0.000    0.035    0.000 manager.py:28(__getitem__)
      761    0.001    0.000    0.013    0.000 values.py:426(__init__)
      294    0.001    0.000    0.007    0.000 base.py:358(get_constant)
2260/2206    0.001    0.000    0.033    0.000 types.py:350(__str__)
       55    0.001    0.000    0.027    0.000 argpacker.py:18(__init__)
      221    0.001    0.000    0.032    0.000 models.py:508(__init__)
      418    0.001    0.000    0.095    0.000 cgutils.py:98(_get_ptr_by_index)
      512    0.001    0.000    0.002    0.000 types.py:894(__init__)
  126/109    0.001    0.000    0.013    0.000 compressed.py:24(__init__)
      424    0.001    0.000    0.008    0.000 instructions.py:199(__init__)
      600    0.001    0.000    0.003    0.000 re.py:230(_compile)
      264    0.001    0.000    0.008    0.000 base.py:64(find)
 1000/998    0.001    0.000    0.006    0.000 base.py:568(cast)
      888    0.001    0.000    0.001    0.000 bytecode.py:172(__init__)
      840    0.001    0.000    0.001    0.000 {method 'reshape' of 'numpy.ndarray' objects}
      152    0.001    0.000    0.024    0.000 lowering.py:352(lower_binop)
     4433    0.001    0.000    0.001    0.000 instructions.py:64(callee)
      133    0.001    0.000    0.002    0.000 macro.py:81(expand_macros_in_block)
      233    0.001    0.000    0.006    0.000 compressed.py:456(_mul_vector)
        7    0.001    0.000    0.054    0.008 typeinfer.py:402(unify)
       22    0.001    0.000    1.557    0.071 dispatcher.py:290(compile)
      420    0.001    0.000    0.052    0.000 cgutils.py:357(if_unlikely)
       80    0.001    0.000    0.054    0.001 callwrapper.py:20(add_arg)
      902    0.001    0.000    0.001    0.000 utils.py:140(__setitem__)
     4027    0.001    0.000    0.001    0.000 typeinfer.py:88(__len__)
     1866    0.001    0.000    0.003    0.000 numeric.py:394(asarray)
      648    0.001    0.000    0.002    0.000 bytecode.py:243(read_arg)
     1565    0.001    0.000    0.001    0.000 inspect.py:641(tokeneater)
      672    0.001    0.000    0.006    0.000 typeinfer.py:126(__call__)
      944    0.001    0.000    0.008    0.000 values.py:123(__hash__)
      249    0.001    0.000    0.009    0.000 instructions.py:414(descr)
     1431    0.001    0.000    0.011    0.000 pythonapi.py:749(_get_function)
     4044    0.001    0.000    0.001    0.000 {method 'pop' of 'list' objects}
     7755    0.001    0.000    0.001    0.000 templates.py:141(<lambda>)
       26    0.001    0.000    0.003    0.000 __init__.py:648(_bind)
      344    0.001    0.000    0.010    0.000 core.py:202(icmp)
  389/125    0.001    0.000    0.003    0.000 argpacker.py:73(_assign_names)
     1170    0.001    0.000    0.001    0.000 dataflow.py:579(pop)
      477    0.001    0.000    0.002    0.000 dataflow.py:203(op_LOAD_FAST)
       16    0.001    0.000    0.002    0.000 _abcoll.py:416(values)
      274    0.001    0.000    0.001    0.000 {numpy.core.multiarray.zeros}
      259    0.001    0.000    0.018    0.000 base.py:291(__mul__)
      283    0.001    0.000    0.004    0.000 models.py:204(__init__)
     1878    0.001    0.000    0.001    0.000 controlflow.py:86(successors)
     2167    0.001    0.000    0.001    0.000 bytecode.py:222(<genexpr>)
       59    0.001    0.000    0.003    0.000 pythonapi.py:34(__init__)
      879    0.001    0.000    0.014    0.000 cgutils.py:280(append_basic_block)
       76    0.001    0.000    0.002    0.000 dataflow.py:257(op_CALL_FUNCTION)
       17    0.001    0.000    0.009    0.001 utils.py:106(__init__)
      823    0.001    0.000    0.001    0.000 templates.py:36(__eq__)
     2070    0.001    0.000    0.002    0.000 ir.py:461(is_temp)
      477    0.001    0.000    0.013    0.000 interpreter.py:737(op_LOAD_FAST)
     1258    0.001    0.000    0.001    0.000 ir.py:513(get)
        9    0.001    0.000    0.001    0.000 tesseroid.py:225(_convert_coords)
      404    0.001    0.000    0.002    0.000 typeinfer.py:604(typeof_expr)
      464    0.001    0.000    0.004    0.000 models.py:242(__init__)
      103    0.001    0.000    0.001    0.000 {method 'reduce' of 'numpy.ufunc' objects}
      171    0.001    0.000    0.002    0.000 cgutils.py:43(make_bytearray)
     1355    0.001    0.000    0.001    0.000 dataflow.py:630(append)
      283    0.001    0.000    0.001    0.000 types.py:952(__init__)
       76    0.001    0.000    0.006    0.000 typeinfer.py:136(__call__)
     1362    0.001    0.000    0.001    0.000 lowering.py:175(typeof)
        7    0.001    0.000    0.001    0.000 dis.py:152(findlabels)
      442    0.001    0.000    0.019    0.000 templates.py:197(apply)
      716    0.001    0.000    0.147    0.000 typeinfer.py:247(__call__)
      133    0.001    0.000    0.004    0.000 interpreter.py:378(_start_new_block)
      348    0.001    0.000    0.008    0.000 builder.py:339(cbranch)
       15    0.001    0.000    0.012    0.001 builtins.py:1186(getitem_unituple)
      132    0.001    0.000    0.003    0.000 _abcoll.py:548(update)
     1458    0.001    0.000    0.015    0.000 core.py:157(get_or_insert_function)
      416    0.001    0.000    0.001    0.000 templates.py:59(signature)
      370    0.001    0.000    0.001    0.000 module.py:53(add_global)
      562    0.001    0.000    0.001    0.000 types.py:484(__init__)
      249    0.001    0.000    0.005    0.000 instructions.py:396(__init__)
      831    0.001    0.000    0.003    0.000 ir.py:609(insert_after)
        8    0.001    0.000    0.106    0.013 callwrapper.py:108(build_wrapper)
     1469    0.001    0.000    0.001    0.000 ir.py:359(__init__)
      132    0.001    0.000    0.004    0.000 collections.py:38(__init__)
       21    0.001    0.000    0.001    0.000 argpacker.py:90(_unflatten)
      761    0.001    0.000    0.006    0.000 values.py:432(__str__)
       80    0.001    0.000    0.026    0.000 pythonapi.py:834(to_native_value)
      394    0.001    0.000    0.589    0.001 module.py:86(<genexpr>)
       25    0.001    0.000    0.002    0.000 coo.py:241(_check)
      126    0.001    0.000    0.001    0.000 compressed.py:1053(prune)
       24    0.001    0.000    0.004    0.000 construct.py:63(diags)
       33    0.001    0.000    0.036    0.001 lowering.py:369(lower_call)
      920    0.001    0.000    0.007    0.000 values.py:387(<genexpr>)
      211    0.001    0.000    0.010    0.000 values.py:271(descr)
     1539    0.001    0.000    0.004    0.000 instructions.py:35(<genexpr>)
      211    0.001    0.000    0.003    0.000 values.py:262(__init__)
     2871    0.001    0.000    0.001    0.000 interpreter.py:439(current_scope)
      159    0.001    0.000    0.012    0.000 values.py:381(descr_prototype)
     1646    0.001    0.000    0.001    0.000 types.py:74(__init__)
      695    0.001    0.000    0.165    0.000 templates.py:224(apply)
       16    0.001    0.000    0.029    0.002 codegen.py:64(_optimize_functions)
     4117    0.001    0.000    0.001    0.000 utils.py:121(<genexpr>)
     1314    0.001    0.000    0.001    0.000 types.py:245(__eq__)
  228/219    0.001    0.000    0.002    0.000 models.py:315(get_value_type)
      732    0.001    0.000    0.014    0.000 lowering.py:610(loadvar)
     3178    0.001    0.000    0.001    0.000 types.py:873(key)
     1451    0.001    0.000    0.001    0.000 ir.py:63(define)
      365    0.001    0.000    0.003    0.000 base.py:310(is_struct_type)
      263    0.001    0.000    0.009    0.000 base.py:411(get_function)
     1154    0.001    0.000    0.001    0.000 dataflow.py:575(push)
      249    0.001    0.000    0.006    0.000 builder.py:379(insert_value)
      724    0.001    0.000    0.001    0.000 typeinfer.py:35(__init__)
     2892    0.001    0.000    0.002    0.000 {next}
     2642    0.001    0.000    0.002    0.000 typeinfer.py:501(<genexpr>)
       57    0.001    0.000    0.002    0.000 numpy_support.py:217(ufunc_find_matching_loop)
       16    0.001    0.000    0.001    0.000 __init__.py:52(create_string_buffer)
        9    0.001    0.000    0.015    0.002 typeinfer.py:381(build_constrain)
      539    0.001    0.000    0.003    0.000 ir.py:537(redefine)
       17    0.001    0.000    0.001    0.000 {_hashlib.openssl_sha1}
      157    0.001    0.000    0.001    0.000 collections.py:113(items)
       47    0.001    0.000    0.008    0.000 cgutils.py:550(get_item_pointer2)
      157    0.001    0.000    0.011    0.000 base.py:251(insert_const_string)
      672    0.001    0.000    0.003    0.000 typeinfer.py:75(union)
       12    0.001    0.000    0.023    0.002 rangeobj.py:80(from_range_state)
      309    0.001    0.000    0.096    0.000 cgutils.py:108(__getattr__)
     1099    0.001    0.000    0.001    0.000 ir.py:302(__init__)
      359    0.001    0.000    0.001    0.000 types.py:283(elements)
     4227    0.001    0.000    0.001    0.000 models.py:145(get_value_type)
     1141    0.001    0.000    0.016    0.000 ir.py:135(list_vars)
   156/11    0.001    0.000    0.002    0.000 copy.py:145(deepcopy)
       35    0.001    0.000    0.005    0.000 cgutils.py:171(__init__)
       25    0.001    0.000    0.005    0.000 coo.py:325(tocsr)
       18    0.001    0.000    0.559    0.031 values.py:397(descr_body)
        8    0.001    0.000    0.001    0.000 {scipy.sparse._sparsetools.csc_plus_csc}
      593    0.001    0.000    0.004    0.000 re.py:138(match)
      751    0.001    0.000    0.001    0.000 typeinfer.py:84(getone)
       43    0.001    0.000    0.003    0.000 npydecl.py:27(generic)
      173    0.001    0.000    0.001    0.000 {method 'encode' of 'str' objects}
      273    0.001    0.000    0.147    0.001 base.py:957(__call__)
      983    0.001    0.000    0.001    0.000 looplifting.py:83(__lt__)
        8    0.001    0.000    0.001    0.000 {scipy.sparse._sparsetools.csr_matmat_pass2}
      204    0.001    0.000    0.004    0.000 instructions.py:128(descr)
      217    0.001    0.000    0.001    0.000 {numpy.core.multiarray.empty}
       21    0.001    0.000    0.001    0.000 templates.py:53(make_concrete_template)
     1123    0.001    0.000    0.001    0.000 {range}
       93    0.001    0.000    0.003    0.000 instructions.py:185(descr)
     1391    0.001    0.000    0.001    0.000 bytecode.py:184(is_jump)
      159    0.001    0.000    0.574    0.004 values.py:411(__str__)
      179    0.001    0.000    0.004    0.000 values.py:50(bitcast)
     3448    0.001    0.000    0.001    0.000 types.py:242(__str__)
      241    0.001    0.000    0.001    0.000 typeinfer.py:65(lock)
       11    0.001    0.000    0.001    0.000 controlflow.py:400(_find_loops)
     5041    0.001    0.000    0.001    0.000 {function __getitem__ at 0x7f49c6db56e0}
      105    0.001    0.000    0.005    0.000 __init__.py:585(parameters)
      482    0.001    0.000    0.001    0.000 core.py:119(null)
     1052    0.001    0.000    0.004    0.000 objmode.py:490(_getvar)
     1491    0.001    0.000    0.001    0.000 {method 'items' of 'dict' objects}
      582    0.001    0.000    0.025    0.000 lowering.py:626(alloca_lltype)
        9    0.001    0.000   42.118    4.680 optimization.py:97(newton)
      731    0.001    0.000    0.001    0.000 numeric.py:464(asanyarray)
       21    0.001    0.000    0.002    0.000 looplifting.py:192(find_previous_inst)
    58/25    0.001    0.000   42.085    1.683 {sum}
      370    0.001    0.000    0.003    0.000 values.py:256(__init__)
      175    0.001    0.000    0.001    0.000 base.py:77(set_shape)
     1177    0.001    0.000    0.001    0.000 core.py:90(void)
      204    0.001    0.000    0.005    0.000 builder.py:350(ret)
     1082    0.001    0.000    0.001    0.000 types.py:801(key)
      571    0.001    0.000    0.001    0.000 compressed.py:90(getnnz)
      987    0.000    0.000    0.001    0.000 looplifting.py:80(__hash__)
     1469    0.000    0.000    0.000    0.000 ir.py:75(__contains__)
      200    0.000    0.000    0.008    0.000 interface.py:291(matmat)
      134    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
      182    0.000    0.000    0.001    0.000 sputils.py:203(isshape)
      131    0.000    0.000    0.001    0.000 types.py:453(__init__)
      163    0.000    0.000    0.003    0.000 builder.py:45(wrapped)
      223    0.000    0.000    0.001    0.000 typeinfer.py:666(typeof_intrinsic_call)
       21    0.000    0.000    1.066    0.051 dispatcher.py:111(get_call_template)
       16    0.000    0.000    0.000    0.000 transforms.py:73(_populate_function_pm)
     1340    0.000    0.000    0.001    0.000 models.py:46(get_argument_type)
     3480    0.000    0.000    0.000    0.000 {chr}
       94    0.000    0.000    0.002    0.000 interpreter.py:775(op_LOAD_GLOBAL)
      179    0.000    0.000    0.002    0.000 builtins.py:353(normalize_index)
      285    0.000    0.000    0.003    0.000 cgutils.py:218(__setattr__)
     3478    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      270    0.000    0.000    0.000    0.000 ffi.py:56(close)
       80    0.000    0.000    0.006    0.000 typeinfer.py:285(__call__)
     2116    0.000    0.000    0.000    0.000 collections.py:78(__iter__)
     2110    0.000    0.000    0.000    0.000 types.py:93(__repr__)
      367    0.000    0.000    0.001    0.000 ffi.py:104(close)
       26    0.000    0.000    0.002    0.000 __init__.py:372(args)
       25    0.000    0.000    0.000    0.000 {scipy.sparse._sparsetools.csc_matvec}
       47    0.000    0.000    0.022    0.000 cgutils.py:542(get_item_pointer)
      264    0.000    0.000    0.001    0.000 cgutils.py:276(get_module)
      236    0.000    0.000    0.003    0.000 values.py:182(__init__)
       76    0.000    0.000    0.003    0.000 interpreter.py:793(op_CALL_FUNCTION)
      521    0.000    0.000    0.000    0.000 types.py:357(gep)
     1276    0.000    0.000    0.000    0.000 ir.py:69(get)
       25    0.000    0.000    0.006    0.000 coo.py:116(__init__)
      9/2    0.000    0.000    1.969    0.985 compiler.py:184(run)
      185    0.000    0.000    0.004    0.000 cgutils.py:765(global_constant)
      245    0.000    0.000    0.000    0.000 module.py:194(_next)
      211    0.000    0.000    0.004    0.000 core.py:169(add_global_variable)
      114    0.000    0.000    0.001    0.000 numpy_support.py:235(choose_types)
       17    0.000    0.000    0.009    0.001 compressed.py:482(_mul_sparse_matrix)
     1533    0.000    0.000    0.000    0.000 controlflow.py:144(descendents)
       75    0.000    0.000    0.001    0.000 types.py:906(__init__)
      259    0.000    0.000    0.000    0.000 values.py:236(get_reference)
       25    0.000    0.000    0.000    0.000 {scipy.sparse._sparsetools.coo_tocsr}
       50    0.000    0.000    0.076    0.002 objmode.py:495(loadvar)
      133    0.000    0.000    0.001    0.000 interpreter.py:537(insert_block)
       24    0.000    0.000    0.001    0.000 targets.py:13(get_default_triple)
       24    0.000    0.000    0.002    0.000 dia.py:76(__init__)
       69    0.000    0.000    0.007    0.000 pythonapi.py:109(err_set_string)
       16    0.000    0.000    0.011    0.001 mohoinv.py:280(jacobian)
      309    0.000    0.000    0.095    0.000 cgutils.py:125(__getitem__)
     2153    0.000    0.000    0.000    0.000 values.py:464(function)
      172    0.000    0.000    0.001    0.000 dataflow.py:298(_binaryop)
      140    0.000    0.000    0.001    0.000 models.py:323(get_argument_type)
     1165    0.000    0.000    0.001    0.000 {setattr}
        9    0.000    0.000    0.000    0.000 mohoinv.py:300(fix_density)
      479    0.000    0.000    0.001    0.000 values.py:393(<genexpr>)
      341    0.000    0.000    0.001    0.000 {method 'intersection_update' of 'set' objects}
      9/3    0.000    0.000    1.107    0.369 compiler.py:385(stage_nopython_frontend)
       92    0.000    0.000    0.001    0.000 builtins.py:389(generic)
       33    0.000    0.000    0.006    0.000 models.py:329(_as)
       50    0.000    0.000    0.008    0.000 callconv.py:275(return_user_exc)
      146    0.000    0.000    0.003    0.000 instructions.py:259(descr)
      245    0.000    0.000    0.001    0.000 module.py:167(__next__)
      183    0.000    0.000    0.001    0.000 _utils.py:49(get_child)
      159    0.000    0.000    0.005    0.000 interpreter.py:900(_binop)
       70    0.000    0.000    0.005    0.000 typeinfer.py:589(typeof_global)
      510    0.000    0.000    0.000    0.000 types.py:279(__init__)
       14    0.000    0.000    0.010    0.001 npyimpl.py:193(numpy_ufunc_kernel)
      150    0.000    0.000    0.004    0.000 interpreter.py:741(op_STORE_FAST)
     15/5    0.000    0.000    0.001    0.000 sre_parse.py:395(_parse)
      267    0.000    0.000    0.001    0.000 models.py:247(get_value_type)
      183    0.000    0.000    0.000    0.000 _utils.py:21(__init__)
     1733    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
        9    0.000    0.000    0.000    0.000 {scipy.sparse._sparsetools.csc_matmat_pass2}
        8    0.000    0.000    0.468    0.059 lowering.py:118(lower_function_body)
      100    0.000    0.000    0.000    0.000 numpy_support.py:108(as_dtype)
      175    0.000    0.000    0.004    0.000 context.py:216(resolve_value_type)
     1326    0.000    0.000    0.000    0.000 lowering.py:607(getvar)
      157    0.000    0.000    0.001    0.000 cgutils.py:54(create_struct_proxy)
        7    0.000    0.000    1.126    0.161 compiler.py:697(native_lowering_stage)
      333    0.000    0.000    0.000    0.000 {hasattr}
      348    0.000    0.000    0.002    0.000 cgutils.py:328(terminate)
      144    0.000    0.000    0.000    0.000 numpy_support.py:80(from_dtype)
      100    0.000    0.000    0.135    0.001 objmode.py:66(lower_inst)
     4573    0.000    0.000    0.000    0.000 {ord}
     24/3    0.000    0.000    0.001    0.000 sre_compile.py:64(_compile)
      159    0.000    0.000    0.001    0.000 ir.py:152(binop)
      175    0.000    0.000    0.000    0.000 base.py:69(__init__)
       24    0.000    0.000    0.001    0.000 arraysetops.py:96(unique)
      561    0.000    0.000    0.000    0.000 types.py:121(gep)
      150    0.000    0.000    0.000    0.000 coo.py:208(getnnz)
      159    0.000    0.000    0.000    0.000 passmanagers.py:43(finalize)
      159    0.000    0.000    0.000    0.000 passmanagers.py:36(initialize)
       49    0.000    0.000    0.003    0.000 objmode.py:548(alloca)
        9    0.000    0.000    0.000    0.000 mohoinv.py:424(set_top_bottom)
     1236    0.000    0.000    0.000    0.000 base.py:99(get_shape)
       82    0.000    0.000    0.001    0.000 transforms.py:15(visit_BasicBlock)
      204    0.000    0.000    0.003    0.000 instructions.py:117(__init__)
      550    0.000    0.000    0.001    0.000 types.py:353(__eq__)
      185    0.000    0.000    0.004    0.000 base.py:261(insert_unique_const)
       11    0.000    0.000    0.000    0.000 {method '__deepcopy__' of 'numpy.ndarray' objects}
        7    0.000    0.000    0.002    0.000 bytecode.py:344(_mark_lineno)
       97    0.000    0.000    0.002    0.000 interpreter.py:770(op_LOAD_CONST)
      426    0.000    0.000    0.000    0.000 values.py:195(__eq__)
     1478    0.000    0.000    0.000    0.000 {method 'span' of '_sre.SRE_Match' objects}
       24    0.000    0.000    0.000    0.000 shape_base.py:792(tile)
       24    0.000    0.000    0.006    0.000 models.py:336(_from)
   112/32    0.000    0.000    1.068    0.033 typeinfer.py:223(__call__)
       24    0.000    0.000    0.591    0.025 module.py:85(__repr__)
      500    0.000    0.000    0.004    0.000 ir.py:251(list_vars)
       44    0.000    0.000    0.001    0.000 dataflow.py:230(op_BINARY_SUBSCR)
      200    0.000    0.000    0.007    0.000 base.py:239(dot)
       89    0.000    0.000    0.000    0.000 typeinfer.py:559(typeof_arg)
      159    0.000    0.000    0.001    0.000 values.py:334(__repr__)
        8    0.000    0.000    0.000    0.000 {scipy.sparse._sparsetools.csc_tocsr}
      888    0.000    0.000    0.000    0.000 values.py:361(entry_basic_block)
      250    0.000    0.000    0.000    0.000 value.py:67(__init__)
      197    0.000    0.000    0.004    0.000 models.py:408(get)
       13    0.000    0.000    0.008    0.001 argpacker.py:29(as_arguments)
      385    0.000    0.000    0.000    0.000 getlimits.py:269(max)
      108    0.000    0.000    0.000    0.000 abc.py:128(__instancecheck__)
      332    0.000    0.000    0.000    0.000 ffi.py:97(__init__)
       85    0.000    0.000    0.001    0.000 base.py:739(get_c_value)
      135    0.000    0.000    0.000    0.000 ffi.py:51(__init__)
       94    0.000    0.000    0.000    0.000 interpreter.py:423(get_global_value)
      281    0.000    0.000    0.000    0.000 types.py:347(__init__)
      136    0.000    0.000    0.000    0.000 controlflow.py:587(_start_new_block)
      133    0.000    0.000    0.001    0.000 interpreter.py:408(_insert_outgoing_phis)
      987    0.000    0.000    0.000    0.000 values.py:460(is_terminated)
      653    0.000    0.000    0.000    0.000 typeinfer.py:101(append)
      418    0.000    0.000    0.000    0.000 models.py:452(get_field_position)
       12    0.000    0.000    0.010    0.001 rangeobj.py:127(iternext)
      289    0.000    0.000    0.001    0.000 cgutils.py:334(get_null_value)
      236    0.000    0.000    0.003    0.000 core.py:250(get)
       93    0.000    0.000    0.002    0.000 builder.py:227(select)
      268    0.000    0.000    0.001    0.000 ir.py:575(prepend)
       26    0.000    0.000    0.002    0.000 __init__.py:400(kwargs)
     1275    0.000    0.000    0.001    0.000 transforms.py:37(visit_Instruction)
       26    0.000    0.000    0.000    0.000 module.py:69(get_function)
       11    0.000    0.000    0.038    0.003 interpreter.py:92(__init__)
      367    0.000    0.000    0.000    0.000 ffi.py:114(detach)
      570    0.000    0.000    0.000    0.000 typeinfer.py:441(<genexpr>)
        9    0.000    0.000   42.061    4.673 misfit.py:192(value)
     1044    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
      273    0.000    0.000    0.001    0.000 core.py:107(int_signextend)
      200    0.000    0.000    0.008    0.000 interface.py:177(_matvec)
       13    0.000    0.000    0.022    0.002 base.py:234(declare_function)
       16    0.000    0.000    0.654    0.041 codegen.py:122(add_ir_module)
      119    0.000    0.000    0.004    0.000 cgutils.py:536(unpack_tuple)
     1525    0.000    0.000    0.000    0.000 types.py:900(key)
       13    0.000    0.000    0.021    0.002 callconv.py:362(call_function)
    50/47    0.000    0.000    0.001    0.000 types.py:693(__init__)
      416    0.000    0.000    0.000    0.000 templates.py:16(__init__)
      152    0.000    0.000    0.000    0.000 {min}
      153    0.000    0.000    0.000    0.000 controlflow.py:240(_add_edge)
      133    0.000    0.000    0.000    0.000 dataflow.py:544(__init__)
        2    0.000    0.000    0.001    0.000 looplifting.py:344(find_varnames_uses)
      383    0.000    0.000    0.000    0.000 {method 'copy' of 'set' objects}
      159    0.000    0.000    0.572    0.004 values.py:404(descr)
      133    0.000    0.000    0.000    0.000 interpreter.py:24(__init__)
       11    0.000    0.000    0.003    0.000 interpreter.py:358(init_first_block)
       71    0.000    0.000    0.000    0.000 context.py:260(_lookup_global)
       28    0.000    0.000    0.003    0.000 cgutils.py:429(for_range)
        4    0.000    0.000    0.000    0.000 newsuper.py:45(newsuper)
      348    0.000    0.000    0.000    0.000 _weakrefset.py:70(__contains__)
      524    0.000    0.000    0.000    0.000 types.py:32(_on_type_disposal)
       42    0.000    0.000    0.002    0.000 typeinfer.py:259(__call__)
      146    0.000    0.000    0.002    0.000 instructions.py:256(__init__)
      144    0.000    0.000    0.000    0.000 controlflow.py:255(_dfs)
      156    0.000    0.000    0.000    0.000 copy.py:267(_keep_alive)
        8    0.000    0.000    0.209    0.026 codegen.py:136(finalize)
       50    0.000    0.000    0.002    0.000 pythonapi.py:809(serialize_object)
        8    0.000    0.000    0.007    0.001 misfit.py:258(gradient)
      236    0.000    0.000    0.023    0.000 core.py:256(get)
       15    0.000    0.000    0.001    0.000 instructions.py:154(descr)
    50/47    0.000    0.000    0.001    0.000 types.py:772(__init__)
       16    0.000    0.000    0.001    0.000 module.py:107(data_layout)
       24    0.000    0.000    0.036    0.001 imputils.py:200(wrapper)
       16    0.000    0.000    0.002    0.000 codegen.py:309(_function_pass_manager)
        8    0.000    0.000    0.002    0.000 compressed.py:1085(_binopt)
   139/11    0.000    0.000    0.000    0.000 controlflow.py:378(_dfs_rec)
      472    0.000    0.000    0.000    0.000 values.py:204(__hash__)
        8    0.000    0.000    0.000    0.000 {scipy.sparse._sparsetools.csr_matmat_pass1}
      142    0.000    0.000    0.003    0.000 models.py:429(set)
        9    0.000    0.000    0.002    0.000 csr.py:155(tocsc)
        9    0.000    0.000    0.005    0.001 pythonapi.py:273(_long_from_native_int)
      9/2    0.000    0.000    1.969    0.985 compiler.py:528(_compile_bytecode)
       70    0.000    0.000    0.002    0.000 builtins.py:1125(make_pair)
        7    0.000    0.000    0.012    0.002 bytecode.py:313(__init__)
      627    0.000    0.000    0.000    0.000 interpreter.py:447(code_locals)
       11    0.000    0.000    0.000    0.000 controlflow.py:358(_find_back_edges)
       93    0.000    0.000    0.002    0.000 instructions.py:168(__init__)
      283    0.000    0.000    0.000    0.000 controlflow.py:497(incoming_blocks)
      288    0.000    0.000    0.000    0.000 controlflow.py:489(iterliveblocks)
       11    0.000    0.000    0.000    0.000 controlflow.py:390(_find_descendents)
       59    0.000    0.000    0.001    0.000 builtins.py:98(generic)
       52    0.000    0.000    0.000    0.000 collections.py:109(values)
      325    0.000    0.000    0.000    0.000 typeinfer.py:140(<genexpr>)
        8    0.000    0.000    0.246    0.031 cpu.py:112(create_cpython_wrapper)
     1180    0.000    0.000    0.000    0.000 __init__.py:278(kind)
      148    0.000    0.000    0.000    0.000 bytecode.py:192(get_jump_target)
       48    0.000    0.000    0.005    0.000 objmode.py:508(delvar)
        5    0.000    0.000    0.003    0.001 codegen.py:84(_get_module_for_linking)
       87    0.000    0.000    0.002    0.000 builtins.py:437(generic)
      150    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x7f4a0b4e4f20}
       72    0.000    0.000    0.000    0.000 shape_base.py:8(atleast_1d)
      263    0.000    0.000    0.000    0.000 base.py:952(__init__)
      200    0.000    0.000    0.007    0.000 interface.py:596(_matmat)
    50/47    0.000    0.000    0.000    0.000 types.py:671(__init__)
      150    0.000    0.000    0.001    0.000 dataflow.py:193(op_STORE_FAST)
      133    0.000    0.000    0.004    0.000 interpreter.py:390(_end_current_block)
      151    0.000    0.000    0.001    0.000 sputils.py:102(to_native)
      278    0.000    0.000    0.000    0.000 typeinfer.py:216(__init__)
        8    0.000    0.000    0.011    0.001 callwrapper.py:161(make_exception_switch)
       60    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
        9    0.000    0.000   42.059    4.673 tesseroid.py:535(gz)
        8    0.000    0.000    0.249    0.031 cpu.py:123(get_executable)
       11    0.000    0.000    0.002    0.000 interpreter.py:568(op_UNPACK_SEQUENCE)
        7    0.000    0.000    0.011    0.002 arrayobj.py:132(iternext_array)
       79    0.000    0.000    0.001    0.000 ir.py:167(call)
       94    0.000    0.000    0.001    0.000 dataflow.py:214(op_LOAD_GLOBAL)
      277    0.000    0.000    0.001    0.000 {all}
        8    0.000    0.000    0.002    0.000 csc.py:126(tocsr)
       28    0.000    0.000    0.002    0.000 npyimpl.py:84(__init__)
      331    0.000    0.000    0.000    0.000 models.py:43(get_data_type)
        1    0.000    0.000    0.000    0.000 looplifting.py:393(_scan_real_end_loop)
      193    0.000    0.000    0.005    0.000 builder.py:206(icmp_unsigned)
      318    0.000    0.000    0.000    0.000 types.py:293(__eq__)
      280    0.000    0.000    0.000    0.000 models.py:258(get_argument_type)
       89    0.000    0.000    0.003    0.000 cgutils.py:343(is_not_null)
       64    0.000    0.000    0.000    0.000 fromnumeric.py:2422(ndim)
       21    0.000    0.000    0.012    0.001 callconv.py:319(get_function_type)
      105    0.000    0.000    0.001    0.000 base.py:272(get_argument_type)
      185    0.000    0.000    0.000    0.000 module.py:48(get_global)
       11    0.000    0.000    0.019    0.002 dataflow.py:24(run)
     1219    0.000    0.000    0.000    0.000 types.py:135(__str__)
       64    0.000    0.000    0.002    0.000 models.py:261(as_argument)
       55    0.000    0.000    0.000    0.000 typeinfer.py:660(typeof_call)
       16    0.000    0.000    0.001    0.000 interpreter.py:818(op_FOR_ITER)
       47    0.000    0.000    0.001    0.000 interpreter.py:764(op_LOAD_ATTR)
      233    0.000    0.000    0.000    0.000 sputils.py:65(upcast_char)
      359    0.000    0.000    0.000    0.000 types.py:253(__init__)
       13    0.000    0.000    0.002    0.000 callconv.py:295(_get_return_status)
        1    0.000    0.000    0.013    0.013 regularization.py:413(__init__)
      196    0.000    0.000    0.000    0.000 values.py:45(get_reference)
       60    0.000    0.000    0.001    0.000 typeinfer.py:202(__call__)
      359    0.000    0.000    0.000    0.000 types.py:260(__getitem__)
      135    0.000    0.000    0.001    0.000 ffi.py:66(__exit__)
      113    0.000    0.000    0.000    0.000 sputils.py:187(isintlike)
      333    0.000    0.000    0.000    0.000 {max}
       17    0.000    0.000    0.002    0.000 csr.py:127(transpose)
      9/3    0.000    0.000    1.107    0.369 compiler.py:667(type_inference_stage)
       19    0.000    0.000    0.092    0.005 objmode.py:201(lower_expr)
       59    0.000    0.000    0.010    0.000 utils.py:163(safe_dot)
     1116    0.000    0.000    0.000    0.000 types.py:91(__str__)
        8    0.000    0.000    0.000    0.000 dispatcher.py:100(add_overload)
       97    0.000    0.000    0.000    0.000 dataflow.py:209(op_LOAD_CONST)
      435    0.000    0.000    0.000    0.000 {method 'index' of 'tuple' objects}
      132    0.000    0.000    0.000    0.000 abc.py:148(__subclasscheck__)
      184    0.000    0.000    0.000    0.000 types.py:24(_autoincr)
       49    0.000    0.000    0.005    0.000 objmode.py:522(storevar)
        9    0.000    0.000    0.001    0.000 data.py:98(_mul_scalar)
       16    0.000    0.000    0.000    0.000 targets.py:74(add_pass)
      175    0.000    0.000    0.001    0.000 data.py:23(__init__)
      241    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
       83    0.000    0.000    0.003    0.000 cgutils.py:338(is_null)
       25    0.000    0.000    0.000    0.000 dataflow.py:155(op_BUILD_TUPLE)
       28    0.000    0.000    0.003    0.000 npyimpl.py:176(_prepare_argument)
        1    0.000    0.000    1.483    1.483 dispatcher.py:357(compile)
        8    0.000    0.000    1.518    0.190 compiler.py:456(_backend)
       85    0.000    0.000    0.001    0.000 pythonapi.py:148(get_c_object)
       44    0.000    0.000    0.002    0.000 models.py:269(from_argument)
        8    0.000    0.000    0.000    0.000 _util.py:12(_aligned_zeros)
       81    0.000    0.000    0.000    0.000 newobject.py:69(next)
     1104    0.000    0.000    0.000    0.000 bytecode.py:283(<genexpr>)
       24    0.000    0.000    0.000    0.000 {numpy.core.multiarray.arange}
       22    0.000    0.000    0.009    0.000 pythonapi.py:1055(to_native_array)
       11    0.000    0.000    0.005    0.000 macro.py:17(expand_macros)
       53    0.000    0.000    0.001    0.000 typeinfer.py:171(__call__)
       50    0.000    0.000    0.006    0.000 pythonapi.py:163(raise_missing_name_error)
      231    0.000    0.000    0.000    0.000 types.py:909(<genexpr>)
       16    0.000    0.000    0.000    0.000 targets.py:157(add_analysis_passes)
      129    0.000    0.000    0.001    0.000 instructions.py:352(<genexpr>)
        8    0.000    0.000    0.006    0.001 callwrapper.py:184(make_keywords)
      216    0.000    0.000    0.005    0.000 builder.py:203(icmp_signed)
       17    0.000    0.000   42.061    2.474 base.py:590(__call__)
       83    0.000    0.000    0.002    0.000 typeinfer.py:565(typeof_const)
       16    0.000    0.000    0.000    0.000 passmanagers.py:20(_dispose)
       32    0.000    0.000    0.000    0.000 types.py:328(__init__)
        9    0.000    0.000    0.000    0.000 {scipy.sparse._sparsetools.csc_matmat_pass1}
        8    0.000    0.000    0.001    0.000 lowering.py:27(__init__)
       55    0.000    0.000    0.028    0.001 base.py:173(get_arg_packer)
      121    0.000    0.000    0.000    0.000 dis.py:178(findlinestarts)
      106    0.000    0.000    0.000    0.000 builder.py:73(position_before)
      319    0.000    0.000    0.001    0.000 ffi.py:147(__del__)
  499/498    0.000    0.000    0.000    0.000 {iter}
       52    0.000    0.000    0.007    0.000 cgutils.py:366(if_likely)
      109    0.000    0.000    0.010    0.000 cgutils.py:132(__setitem__)
      136    0.000    0.000    0.000    0.000 controlflow.py:17(__init__)
     1063    0.000    0.000    0.000    0.000 {hex}
        2    0.000    0.000    0.000    0.000 {method 'readlines' of 'file' objects}
       16    0.000    0.000    0.000    0.000 {posix.stat}
       83    0.000    0.000    0.002    0.000 base.py:494(__getattr__)
       81    0.000    0.000    0.000    0.000 base.py:435(__next__)
      267    0.000    0.000    0.000    0.000 base.py:870(isspmatrix)
      531    0.000    0.000    0.000    0.000 types.py:459(key)
       82    0.000    0.000    0.000    0.000 sre_parse.py:193(__next)
        9    0.000    0.000    0.000    0.000 {scipy.sparse._sparsetools.csr_tocsc}
       14    0.000    0.000    0.001    0.000 inspect.py:440(getsourcefile)
       83    0.000    0.000    0.082    0.001 objmode.py:477(return_exception_raised)
    31/11    0.000    0.000    0.000    0.000 sre_parse.py:151(getwidth)
       13    0.000    0.000    0.011    0.001 callconv.py:332(decorate_function)
       97    0.000    0.000    0.000    0.000 ir.py:392(__init__)
        8    0.000    0.000    0.000    0.000 type_annotations.py:62(__init__)
       53    0.000    0.000    0.000    0.000 typeinfer.py:186(__call__)
       24    0.000    0.000    0.001    0.000 codegen.py:270(_create_empty_module)
        8    0.000    0.000    0.108    0.013 callwrapper.py:83(build)
       44    0.000    0.000    0.001    0.000 interpreter.py:842(op_BINARY_SUBSCR)
       10    0.000    0.000    0.015    0.002 objmode.py:356(lower_global)
        1    0.000    0.000    0.001    0.001 looplifting.py:357(separate_loops)
      165    0.000    0.000    0.004    0.000 core.py:139(bitcast)
       35    0.000    0.000    0.001    0.000 base.py:799(get_struct_type)
        2    0.000    0.000    0.000    0.000 looplifting.py:264(remove_from_outer_use)
      146    0.000    0.000    0.004    0.000 callconv.py:292(_return_errcode_raw)
      135    0.000    0.000    0.000    0.000 ffi.py:69(__del__)
        7    0.000    0.000    0.011    0.002 inspect.py:673(getblock)
       11    0.000    0.000    0.002    0.000 controlflow.py:338(_find_post_dominators)
       16    0.000    0.000    0.000    0.000 passes.py:33(create_pass_manager_builder)
       24    0.000    0.000    0.002    0.000 models.py:718(__init__)
      197    0.000    0.000    0.000    0.000 {numpy.core.multiarray.can_cast}
    47/14    0.000    0.000    0.001    0.000 pickle.py:269(save)
       47    0.000    0.000    0.000    0.000 dataflow.py:224(op_LOAD_ATTR)
       46    0.000    0.000    0.000    0.000 {method '__deepcopy__' of 'numpy.generic' objects}
      153    0.000    0.000    0.000    0.000 controlflow.py:75(add_edge)
       24    0.000    0.000    0.000    0.000 {numpy.core.multiarray.concatenate}
       70    0.000    0.000    0.001    0.000 models.py:495(__init__)
        9    0.000    0.000    0.000    0.000 linalg.py:1924(norm)
      211    0.000    0.000    0.001    0.000 module.py:60(get_unique_name)
       39    0.000    0.000    0.002    0.000 pythonapi.py:66(incref)
      416    0.000    0.000    0.000    0.000 values.py:357(module)
        8    0.000    0.000    0.001    0.000 utils.py:34(make_system)
       22    0.000    0.000    0.026    0.001 objmode.py:456(check_error)
       24    0.000    0.000    0.011    0.000 dia.py:239(tocsr)
      553    0.000    0.000    0.000    0.000 types.py:870(__len__)
        8    0.000    0.000    0.000    0.000 compiler.py:103(compile_result)
      349    0.000    0.000    0.000    0.000 data.py:26(_get_dtype)
      212    0.000    0.000    0.000    0.000 cgutils.py:701(is_pointer)
      159    0.000    0.000    0.000    0.000 core.py:74(pointer)
       73    0.000    0.000    0.000    0.000 six.py:555(itervalues)
      293    0.000    0.000    0.000    0.000 {filter}
      196    0.000    0.000    0.000    0.000 values.py:38(__init__)
        7    0.000    0.000    0.000    0.000 typeinfer.py:475(get_return_type)
       39    0.000    0.000    0.002    0.000 pythonapi.py:393(number_float)
       76    0.000    0.000    0.001    0.000 sputils.py:26(upcast)
       49    0.000    0.000    0.124    0.003 objmode.py:144(lower_assign)
      559    0.000    0.000    0.000    0.000 types.py:957(key)
       22    0.000    0.000    0.002    0.000 pythonapi.py:1201(numba_array_adaptor)
     18/8    0.000    0.000    0.006    0.001 pythonapi.py:951(from_native_value)
       90    0.000    0.000    0.000    0.000 context.py:38(get_number_type)
    12/11    0.000    0.000    0.002    0.000 copy.py:253(_deepcopy_dict)
        9    0.000    0.000   42.060    4.673 mohoinv.py:262(predicted)
       11    0.000    0.000    0.006    0.001 controlflow.py:109(process)
       70    0.000    0.000    0.002    0.000 base.py:313(get_constant_generic)
       28    0.000    0.000    0.001    0.000 base.py:278(get_data_type)
       65    0.000    0.000    0.000    0.000 value.py:112(is_declaration)
       11    0.000    0.000    0.000    0.000 controlflow.py:268(_eliminate_dead_blocks)
       25    0.000    0.000    0.000    0.000 {scipy.sparse._sparsetools.csr_has_canonical_format}
       16    0.000    0.000    0.000    0.000 passmanagers.py:10(create_function_pass_manager)
      103    0.000    0.000    0.003    0.000 cgutils.py:202(_get_ptr_by_index)
       21    0.000    0.000    0.000    0.000 module.py:147(functions)
      717    0.000    0.000    0.000    0.000 __init__.py:266(name)
      238    0.000    0.000    0.000    0.000 typeinfer.py:121(__init__)
        8    0.000    0.000    0.000    0.000 {scipy.sparse._sparsetools.csc_diagonal}
        5    0.000    0.000    0.008    0.002 builtins.py:1161(iternext_unituple)
       12    0.000    0.000    0.013    0.001 arrayobj.py:370(setitem_array_tuple)
        9    0.000    0.000    0.000    0.000 utils.py:420(__init__)
       42    0.000    0.000    0.001    0.000 context.py:77(resolve_getattr)
       92    0.000    0.000    0.001    0.000 types.py:306(<lambda>)
       89    0.000    0.000    0.001    0.000 typeinfer.py:368(seed_type)
       10    0.000    0.000    0.006    0.001 pythonapi.py:1023(to_native_int)
       80    0.000    0.000    0.000    0.000 funcdesc.py:14(transform_arg_name)
       63    0.000    0.000    0.003    0.000 cgutils.py:209(__getattr__)
       85    0.000    0.000    0.000    0.000 core.py:173(get_global_variable_named)
       21    0.000    0.000    0.000    0.000 inspect.py:398(getfile)
       49    0.000    0.000    0.002    0.000 pythonapi.py:99(err_occurred)
      187    0.000    0.000    0.000    0.000 {issubclass}
      534    0.000    0.000    0.000    0.000 {method 'group' of '_sre.SRE_Match' objects}
       11    0.000    0.000    0.166    0.015 compiler.py:642(translate_stage)
       13    0.000    0.000    0.004    0.000 argpacker.py:60(assign_names)
       24    0.000    0.000    0.082    0.003 base.py:560(pair_second)
        8    0.000    0.000    0.495    0.062 lowering.py:101(lower_normal_function)
       27    0.000    0.000   42.064    1.558 base.py:472(<genexpr>)
       14    0.000    0.000    0.001    0.000 npyfuncs.py:60(_dispatch_func_by_name_type)
       52    0.000    0.000    0.000    0.000 base.py:806(get_dummy_value)
       65    0.000    0.000    0.000    0.000 builtins.py:87(generic)
       40    0.000    0.000    0.002    0.000 cgutils.py:233(__setitem__)
       14    0.000    0.000    0.001    0.000 npyimpl.py:288(__init__)
      113    0.000    0.000    0.000    0.000 sputils.py:218(issequence)
        7    0.000    0.000    0.000    0.000 {method '__reduce_ex__' of 'object' objects}
       89    0.000    0.000    0.001    0.000 typeinfer.py:363(seed_argument)
       47    0.000    0.000    0.000    0.000 ir.py:217(getattr)
       20    0.000    0.000    0.001    0.000 models.py:488(__init__)
       71    0.000    0.000    0.000    0.000 context.py:240(get_global_type)
       42    0.000    0.000    0.001    0.000 cgutils.py:395(ifelse)
       24    0.000    0.000    0.000    0.000 type_check.py:553(common_type)
       24    0.000    0.000    0.000    0.000 module.py:6(__init__)
      151    0.000    0.000    0.000    0.000 {method 'newbyteorder' of 'numpy.dtype' objects}
      276    0.000    0.000    0.000    0.000 templates.py:202(<genexpr>)
       25    0.000    0.000    0.001    0.000 compressed.py:966(__get_has_canonical_format)
       22    0.000    0.000    0.005    0.000 base.py:552(pair_first)
      8/2    0.000    0.000    1.090    0.545 typeinfer.py:386(propagate)
       42    0.000    0.000    0.001    0.000 templates.py:247(_resolve)
      178    0.000    0.000    0.000    0.000 typeinfer.py:359(_mangle_arg_name)
      141    0.000    0.000    0.000    0.000 {any}
      236    0.000    0.000    0.000    0.000 instructions.py:30(set_metadata)
       92    0.000    0.000    0.000    0.000 values.py:232(<genexpr>)
        7    0.000    0.000    0.002    0.000 inspect.py:518(findsource)
       39    0.000    0.000    0.002    0.000 pythonapi.py:403(float_as_double)
       47    0.000    0.000    0.000    0.000 ir.py:227(static_getitem)
     12/3    0.000    0.000    0.001    0.000 sre_parse.py:317(_parse_sub)
       59    0.000    0.000    0.003    0.000 base.py:855(get_python_api)
      103    0.000    0.000    0.000    0.000 sre_parse.py:141(__getitem__)
       11    0.000    0.000    0.000    0.000 dataflow.py:146(op_UNPACK_SEQUENCE)
       47    0.000    0.000    0.000    0.000 pickle.py:227(memoize)
       60    0.000    0.000    0.000    0.000 numeric.py:1910(isscalar)
    30/14    0.000    0.000    0.001    0.000 context.py:360(unify_pairs)
      191    0.000    0.000    0.000    0.000 utils.py:348(<lambda>)
      191    0.000    0.000    0.000    0.000 utils.py:300(_not_op_and_not_eq)
       17    0.000    0.000    0.002    0.000 compressed.py:1073(_with_data)
        8    0.000    0.000    0.000    0.000 {method 'fill' of 'numpy.ndarray' objects}
      133    0.000    0.000    0.000    0.000 controlflow.py:32(__iter__)
       14    0.000    0.000    0.000    0.000 pickle.py:736(save_global)
       18    0.000    0.000    0.000    0.000 {numpy.core._dotblas.dot}
       16    0.000    0.000    0.000    0.000 targets.py:222(add_pass)
       25    0.000    0.000    0.001    0.000 interpreter.py:856(op_BUILD_TUPLE)
        9    0.000    0.000   42.059    4.673 tesseroid.py:291(_dispatcher)
       29    0.000    0.000    0.001    0.000 instructions.py:351(descr)
      204    0.000    0.000    0.000    0.000 instructions.py:121(return_value)
       12    0.000    0.000    0.005    0.000 rangeobj.py:28(range1_impl)
       24    0.000    0.000    0.011    0.000 base.py:512(<genexpr>)
       24    0.000    0.000    0.007    0.000 base.py:492(<genexpr>)
       44    0.000    0.000    0.000    0.000 ir.py:222(getitem)
       64    0.000    0.000    0.000    0.000 utils.py:215(bit_length)
        8    0.000    0.000    0.001    0.000 codegen.py:37(__init__)
      168    0.000    0.000    0.000    0.000 bytecode.py:203(block_effect)
       63    0.000    0.000    0.003    0.000 cgutils.py:226(__getitem__)
      196    0.000    0.000    0.000    0.000 values.py:42(__str__)
       29    0.000    0.000    0.000    0.000 interpreter.py:990(op_JUMP_ABSOLUTE)
       83    0.000    0.000    0.001    0.000 typeinfer.py:547(resolve_value_type)
       83    0.000    0.000    0.003    0.000 objmode.py:474(is_null)
       88    0.000    0.000    0.005    0.000 callwrapper.py:181(make_const_string)
        1    0.000    0.000    0.000    0.000 looplifting.py:271(discover_args_and_returns)
        8    0.000    0.000    0.006    0.001 argpacker.py:44(from_arguments)
        1    0.000    0.000   42.134   42.134 <string>:2(<module>)
        8    0.000    0.000    0.000    0.000 funcdesc.py:49(__init__)
      133    0.000    0.000    0.000    0.000 ir.py:570(__init__)
      114    0.000    0.000    0.000    0.000 _abcoll.py:386(__contains__)
      170    0.000    0.000    0.000    0.000 ir.py:596(is_terminated)
       12    0.000    0.000    0.025    0.002 rangeobj.py:67(getiter_range32_impl)
      122    0.000    0.000    0.000    0.000 {method 'write' of 'cStringIO.StringO' objects}
       49    0.000    0.000    0.004    0.000 pythonapi.py:836(c_api_error)
        9    0.000    0.000    0.002    0.000 bytecode.py:267(__init__)
        8    0.000    0.000    0.000    0.000 executionengine.py:83(add_module)
      100    0.000    0.000    0.000    0.000 instructions.py:359(add_incoming)
        2    0.000    0.000    0.000    0.000 linecache.py:72(updatecache)
       43    0.000    0.000    0.000    0.000 numpy_support.py:161(supported_ufunc_loop)
       32    0.000    0.000    0.001    0.000 npydecl.py:162(<lambda>)
       21    0.000    0.000    0.016    0.001 arrayobj.py:160(getitem_arraynd_intp)
       72    0.000    0.000    0.000    0.000 instructions.py:148(add_case)
        7    0.000    0.000    0.000    0.000 base.py:197(insert_user_function)
        9    0.000    0.000    0.000    0.000 typeinfer.py:336(__init__)
       16    0.000    0.000    0.000    0.000 utils.py:332(si2mgal)
       22    0.000    0.000    0.000    0.000 interpreter.py:848(op_STORE_SUBSCR)
       29    0.000    0.000    0.001    0.000 builder.py:388(phi)
       16    0.000    0.000    0.248    0.016 codegen.py:223(get_pointer_to_function)
        7    0.000    0.000    1.126    0.161 compiler.py:443(backend_nopython_mode)
        5    0.000    0.000    0.015    0.003 imputils.py:70(imp)
       97    0.000    0.000    0.000    0.000 ir.py:404(__init__)
        7    0.000    0.000    0.001    0.000 copy.py:306(_reconstruct)
        7    0.000    0.000    0.014    0.002 compiler.py:71(get_function_attributes)
       16    0.000    0.000    0.035    0.002 codegen.py:132(add_llvm_module)
       87    0.000    0.000    0.006    0.000 context.py:101(resolve_setitem)
       16    0.000    0.000    0.001    0.000 interface.py:130(__new__)
    22/11    0.000    0.000    0.001    0.000 pickle.py:538(save_tuple)
      448    0.000    0.000    0.000    0.000 types.py:922(key)
       64    0.000    0.000    0.001    0.000 builtins.py:508(real_mul_impl)
        8    0.000    0.000    0.010    0.001 misfit.py:224(hessian)
        8    0.000    0.000    0.000    0.000 regularization.py:290(gradient)
       16    0.000    0.000    0.001    0.000 cgutils.py:749(pointer_add)
        9    0.000    0.000    0.005    0.001 cgutils.py:680(guard_null)
        8    0.000    0.000    0.015    0.002 base.py:494(hessian)
       14    0.000    0.000    0.001    0.000 pickle.py:1378(dumps)
        8    0.000    0.000    0.007    0.001 base.py:474(gradient)
        7    0.000    0.000    0.000    0.000 inspect.py:744(getargs)
       28    0.000    0.000    0.012    0.000 arrayobj.py:127(_getitem_array1d)
       21    0.000    0.000    0.000    0.000 callconv.py:89(get_return_type)
        9    0.000    0.000    0.002    0.000 regularization.py:311(value)
       19    0.000    0.000    0.000    0.000 interpreter.py:788(op_SETUP_LOOP)
       70    0.000    0.000    0.000    0.000 typeinfer.py:572(sentry_modified_builtin)
        9    0.000    0.000    0.000    0.000 compiler.py:219(__init__)
        8    0.000    0.000    0.002    0.000 cpu.py:72(get_env_from_closure)
       33    0.000    0.000    0.003    0.000 typeinfer.py:496(get_state_token)
       28    0.000    0.000    0.001    0.000 base.py:304(unpack_value)
      107    0.000    0.000    0.000    0.000 ir.py:382(__init__)
        4    0.000    0.000    0.000    0.000 copy.py:234(_deepcopy_tuple)
       61    0.000    0.000    0.000    0.000 utils.py:79(__getattr__)
       15    0.000    0.000    0.000    0.000 interpreter.py:1016(_op_JUMP_IF)
       59    0.000    0.000    0.000    0.000 sputils.py:182(isscalarlike)
       11    0.000    0.000    0.167    0.015 compiler.py:321(stage_analyze_bytecode)
        7    0.000    0.000    0.000    0.000 sre_compile.py:256(_optimize_charset)
        8    0.000    0.000    0.000    0.000 _abcoll.py:412(items)
      978    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
        7    0.000    0.000    0.026    0.004 compiler.py:279(extract_bytecode)
        8    0.000    0.000    0.015    0.002 lowering.py:168(setup_function)
       54    0.000    0.000    0.000    0.000 utils.py:120(__iter__)
       24    0.000    0.000    0.000    0.000 shape_base.py:60(atleast_2d)
       32    0.000    0.000    0.001    0.000 interface.py:145(__init__)
      562    0.000    0.000    0.000    0.000 {id}
       22    0.000    0.000    0.000    0.000 ir.py:499(__init__)
       21    0.000    0.000    0.011    0.001 module.py:129(link_in)
        9    0.000    0.000    0.000    0.000 cgutils.py:624(is_scalar_zero)
    22/20    0.000    0.000    0.001    0.000 types.py:790(copy)
        1    0.000    0.000    0.003    0.003 looplifting.py:113(insert_loop_call)
       83    0.000    0.000    0.002    0.000 callconv.py:83(return_exc)
       80    0.000    0.000    0.002    0.000 pythonapi.py:752(alloca_obj)
      240    0.000    0.000    0.000    0.000 csc.py:195(_swap)
      159    0.000    0.000    0.000    0.000 values.py:322(__init__)
       11    0.000    0.000    0.000    0.000 interpreter.py:1001(op_RETURN_VALUE)
       14    0.000    0.000    0.002    0.000 npyimpl.py:300(generate)
       15    0.000    0.000    0.000    0.000 builder.py:209(fcmp_ordered)
       70    0.000    0.000    0.000    0.000 models.py:105(get_value_type)
      101    0.000    0.000    0.000    0.000 sputils.py:106(getdtype)
       21    0.000    0.000    0.000    0.000 types.py:204(_format_float_as_hex)
       17    0.000    0.000    0.001    0.000 objmode.py:577(_freeze_string)
       80    0.000    0.000    0.000    0.000 pythonapi.py:22(__init__)
       32    0.000    0.000    0.000    0.000 dataflow.py:594(make_incoming)
       16    0.000    0.000    0.003    0.000 compressed.py:339(__add__)
       70    0.000    0.000    0.002    0.000 base.py:884(make_pair)
       12    0.000    0.000    0.000    0.000 typeinfer.py:155(__call__)
        8    0.000    0.000    0.000    0.000 data.py:45(__imul__)
       17    0.000    0.000    0.001    0.000 base.py:453(get_attribute)
       31    0.000    0.000    0.001    0.000 builder.py:182(not_)
       16    0.000    0.000    0.000    0.000 transforms.py:18(opt_level)
        8    0.000    0.000    0.001    0.000 pythonapi.py:80(parse_tuple_and_keywords)
       23    0.000    0.000    0.001    0.000 values.py:231(descr)
       16    0.000    0.000    0.000    0.000 interface.py:590(__init__)
       24    0.000    0.000    0.000    0.000 core.py:153(new)
        7    0.000    0.000    0.000    0.000 imputils.py:65(user_function)
       88    0.000    0.000    0.000    0.000 funcdesc.py:27(<genexpr>)
       16    0.000    0.000    0.000    0.000 dataflow.py:249(op_FOR_ITER)
       15    0.000    0.000    0.000    0.000 core.py:220(fcmp)
        8    0.000    0.000    0.000    0.000 funcdesc.py:103(_get_function_info)
       18    0.000    0.000    0.001    0.000 base.py:298(pack_value)
       11    0.000    0.000    0.000    0.000 controlflow.py:282(_find_exit_points)
       92    0.000    0.000    0.000    0.000 builtins.py:379(generic)
        9    0.000    0.000    0.000    0.000 compiler.py:587(legalize_given_types)
      124    0.000    0.000    0.000    0.000 types.py:926(__iter__)
        1    0.000    0.000    0.005    0.005 looplifting.py:8(lift_loop)
        8    0.000    0.000    0.000    0.000 compiler.py:405(stage_annotate_type)
        9    0.000    0.000   42.064    4.674 base.py:454(value)
       25    0.000    0.000    0.000    0.000 compressed.py:115(_set_self)
       73    0.000    0.000    0.001    0.000 arrayobj.py:23(make_array)
       69    0.000    0.000    0.002    0.000 interpreter.py:918(op_BINARY_MULTIPLY)
       23    0.000    0.000    0.000    0.000 utils.py:155(acquire)
      141    0.000    0.000    0.000    0.000 interpreter.py:451(code_names)
       23    0.000    0.000    0.000    0.000 utils.py:162(release)
       24    0.000    0.000    0.002    0.000 imputils.py:160(set_valid)
       25    0.000    0.000    0.000    0.000 compressed.py:988(__set_has_canonical_format)
        8    0.000    0.000    0.000    0.000 compressed.py:521(diagonal)
       29    0.000    0.000    0.000    0.000 dataflow.py:492(op_JUMP_ABSOLUTE)
       50    0.000    0.000    0.001    0.000 {method 'max' of 'numpy.ndarray' objects}
       17    0.000    0.000    0.000    0.000 values.py:57(inttoptr)
       20    0.000    0.000    0.003    0.000 pythonapi.py:764(if_object_ok)
        8    0.000    0.000    0.000    0.000 copy.py:226(_deepcopy_list)
       16    0.000    0.000    0.000    0.000 transforms.py:84(_dispose)
       28    0.000    0.000    0.000    0.000 npyimpl.py:245(cast)
       21    0.000    0.000    0.000    0.000 module.py:191(_dispose)
        8    0.000    0.000    1.019    0.127 lowering.py:74(lower)
        1    0.000    0.000    0.415    0.415 compiler.py:336(frontend_looplift)
       50    0.000    0.000    0.000    0.000 {method 'min' of 'numpy.ndarray' objects}
       19    0.000    0.000    0.000    0.000 dataflow.py:515(op_SETUP_LOOP)
        7    0.000    0.000    0.013    0.002 inspect.py:682(getsourcelines)
        8    0.000    0.000    0.021    0.003 iterative.py:78(non_reentrant)
      107    0.000    0.000    0.000    0.000 typeinfer.py:448(<genexpr>)
       24    0.000    0.000    0.000    0.000 ffi.py:75(__str__)
      6/3    0.000    0.000    0.001    0.000 types.py:780(post_init)
       16    0.000    0.000    0.000    0.000 transforms.py:7(create_pass_manager_builder)
        7    0.000    0.000    0.000    0.000 options.py:30(set_flags)
       50    0.000    0.000    0.000    0.000 common.py:7(_encode_string)
      186    0.000    0.000    0.000    0.000 instructions.py:173(cond)
       23    0.000    0.000    0.000    0.000 values.py:222(__init__)
      307    0.000    0.000    0.000    0.000 models.py:151(as_argument)
       85    0.000    0.000    0.000    0.000 builder.py:69(function)
        8    0.000    0.000    0.002    0.000 pythonapi.py:798(unserialize)
      144    0.000    0.000    0.000    0.000 controlflow.py:539(<genexpr>)
       49    0.000    0.000    0.003    0.000 base.py:201(asformat)
       19    0.000    0.000    0.000    0.000 dataflow.py:101(pop_syntax_block)
       43    0.000    0.000    0.000    0.000 numpy_support.py:212(numpy_outputs)
       11    0.000    0.000    0.000    0.000 controlflow.py:61(__init__)
       64    0.000    0.000    0.000    0.000 templates.py:182(__init__)
       26    0.000    0.000    0.003    0.000 __init__.py:776(bind)
        7    0.000    0.000    0.001    0.000 builtins.py:145(int_spower_impl)
       10    0.000    0.000    0.001    0.000 pythonapi.py:506(tuple_setitem)
       89    0.000    0.000    0.000    0.000 compiler.py:583(_is_nopython_types)
        3    0.000    0.000    0.000    0.000 castgraph.py:130(insert_rule)
       16    0.000    0.000    0.000    0.000 interpreter.py:814(op_GET_ITER)
        8    0.000    0.000    0.000    0.000 types.py:929(coerce)
       14    0.000    0.000    0.010    0.001 npyimpl.py:320(unary_scalar_ufunc)
       69    0.000    0.000    0.000    0.000 base.py:68(regul_param)
      155    0.000    0.000    0.000    0.000 csr.py:211(_swap)
       88    0.000    0.000    0.000    0.000 ir.py:337(__init__)
        3    0.000    0.000    0.005    0.002 pythonapi.py:1138(from_native_tuple)
       22    0.000    0.000    0.000    0.000 dataflow.py:237(op_STORE_SUBSCR)
       64    0.000    0.000    0.000    0.000 sre_parse.py:212(get)
       44    0.000    0.000    0.000    0.000 values.py:307(add)
       16    0.000    0.000    0.000    0.000 transforms.py:58(loop_vectorize)
        9    0.000    0.000    0.000    0.000 _abcoll.py:408(keys)
       20    0.000    0.000    0.001    0.000 base.py:385(get_constant_undef)
       16    0.000    0.000    0.000    0.000 transforms.py:34(inlining_threshold)
      144    0.000    0.000    0.000    0.000 controlflow.py:437(<genexpr>)
      2/1    0.000    0.000    0.415    0.415 compiler.py:370(stage_objectmode_frontend)
        1    0.000    0.000    0.390    0.390 compiler.py:723(py_lowering_stage)
      135    0.000    0.000    0.000    0.000 {_ctypes.byref}
       31    0.000    0.000    0.001    0.000 objmode.py:561(incref)
       29    0.000    0.000    0.000    0.000 controlflow.py:623(op_JUMP_ABSOLUTE)
        1    0.000    0.000   42.119   42.119 base.py:203(fit)
      9/2    0.000    0.000    1.969    0.985 compiler.py:303(compile_bytecode)
       20    0.000    0.000    0.000    0.000 typeinfer.py:517(typeof_setitem)
       14    0.000    0.000    0.000    0.000 npyfuncs.py:24(_check_arity_and_homogeneity)
        8    0.000    0.000    0.001    0.000 pythonapi.py:584(call_function_objargs)
        6    0.000    0.000    0.000    0.000 copy.py:66(copy)
       13    0.000    0.000    0.001    0.000 base.py:529(get_returned_value)
       57    0.000    0.000    0.000    0.000 ufunc_db.py:32(get_ufunc_info)
       42    0.000    0.000    0.001    0.000 templates.py:241(resolve)
       35    0.000    0.000    0.000    0.000 core.py:82(struct)
       24    0.000    0.000    0.000    0.000 ffi.py:82(__bool__)
        1    0.000    0.000    0.001    0.001 base.py:890(make_constant_array)
       14    0.000    0.000    0.001    0.000 pickle.py:220(dump)
       28    0.000    0.000    0.003    0.000 cgutils.py:517(_loop_nest)
        2    0.000    0.000    1.983    0.991 dispatcher.py:155(_compile_for_args)
        8    0.000    0.000    0.000    0.000 codegen.py:377(_add_module)
       16    0.000    0.000    0.000    0.000 codegen.py:318(_pass_manager_builder)
       14    0.000    0.000    0.002    0.000 lowering.py:71(return_exception)
       25    0.000    0.000    0.000    0.000 ir.py:172(build_tuple)
        8    0.000    0.000    0.246    0.031 lowering.py:155(create_cpython_wrapper)
      186    0.000    0.000    0.000    0.000 instructions.py:181(rhs)
       16    0.000    0.000    0.001    0.000 transforms.py:76(populate)
        1    0.000    0.000    0.003    0.003 arrayobj.py:278(getitem_array_tuple)
        8    0.000    0.000    0.010    0.001 lowering.py:95(extract_function_arguments)
        9    0.000    0.000    0.000    0.000 tesseroid.py:206(_check_input)
       25    0.000    0.000    0.000    0.000 {method 'flatten' of 'numpy.ndarray' objects}
      159    0.000    0.000    0.000    0.000 values.py:325(alignstack)
       21    0.000    0.000    0.000    0.000 module.py:162(__init__)
       40    0.000    0.000    0.001    0.000 cgutils.py:151(_getvalue)
       14    0.000    0.000    0.000    0.000 controlflow.py:247(_remove_node_edges)
       29    0.000    0.000    0.000    0.000 instructions.py:347(__init__)
       11    0.000    0.000    0.000    0.000 controlflow.py:469(__init__)
        8    0.000    0.000    0.000    0.000 callconv.py:267(return_value)
       16    0.000    0.000    0.000    0.000 passmanagers.py:32(__init__)
      250    0.000    0.000    0.000    0.000 ffi.py:123(_dispose)
       32    0.000    0.000    0.001    0.000 builtins.py:500(real_add_impl)
       28    0.000    0.000    0.003    0.000 cgutils.py:510(loop_nest)
       13    0.000    0.000    0.000    0.000 interpreter.py:906(_inplace_binop)
       40    0.000    0.000    0.000    0.000 pythonapi.py:781(get_null_object)
       16    0.000    0.000    0.000    0.000 funcdesc.py:74(lookup_module)
      135    0.000    0.000    0.000    0.000 common.py:33(_is_shutting_down)
       40    0.000    0.000    0.000    0.000 looplifting.py:74(__add__)
        3    0.000    0.000    0.000    0.000 sre_compile.py:433(_compile_info)
       11    0.000    0.000    0.000    0.000 controlflow.py:372(_find_topo_order)
        8    0.000    0.000    0.001    0.000 interface.py:637(aslinearoperator)
       11    0.000    0.000    0.000    0.000 dataflow.py:505(op_RETURN_VALUE)
       14    0.000    0.000    0.000    0.000 pickle.py:173(__init__)
        7    0.000    0.000    0.000    0.000 inspect.py:804(getargspec)
       50    0.000    0.000    0.001    0.000 _methods.py:25(_amax)
       32    0.000    0.000    0.000    0.000 ffi.py:138(__enter__)
      173    0.000    0.000    0.000    0.000 looplifting.py:239(<genexpr>)
       16    0.000    0.000    0.000    0.000 ffi.py:156(__hash__)
        9    0.000    0.000    0.000    0.000 numeric.py:81(zeros_like)
       97    0.000    0.000    0.000    0.000 controlflow.py:562(jump)
       10    0.000    0.000    0.000    0.000 value.py:94(linkage)
       46    0.000    0.000    0.000    0.000 compiler.py:237(fallback_context)
       42    0.000    0.000    0.000    0.000 cgutils.py:422(__enter__)
      136    0.000    0.000    0.000    0.000 controlflow.py:68(add_node)
       21    0.000    0.000    0.001    0.000 context.py:348(unify_types)
        8    0.000    0.000    0.001    0.000 cpu.py:100(post_lowering)
       16    0.000    0.000    0.000    0.000 inspect.py:472(getmodule)
       71    0.000    0.000    0.000    0.000 types.py:918(__len__)
       28    0.000    0.000    0.001    0.000 models.py:80(load_from_data_pointer)
       16    0.000    0.000    0.000    0.000 dataflow.py:243(op_GET_ITER)
        2    0.000    0.000    0.000    0.000 {open}
       28    0.000    0.000    0.000    0.000 types.py:335(<lambda>)
        8    0.000    0.000    0.021    0.003 utils.py:129(safe_solve)
        1    0.000    0.000    0.001    0.001 looplifting.py:199(make_loop_bytecode)
       53    0.000    0.000    0.000    0.000 types.py:102(__ne__)
       17    0.000    0.000    0.000    0.000 {method 'hexdigest' of '_hashlib.HASH' objects}
       14    0.000    0.000    0.001    0.000 base.py:751(call_external_function)
       22    0.000    0.000    0.001    0.000 context.py:112(resolve_module_constants)
       10    0.000    0.000    0.000    0.000 module.py:65(declare_intrinsic)
        7    0.000    0.000    0.000    0.000 bytecode.py:217(__init__)
       51    0.000    0.000    0.000    0.000 inspect.py:51(ismodule)
       16    0.000    0.000    0.000    0.000 ir.py:616(insert_before_terminator)
        8    0.000    0.000    0.001    0.000 pythonapi.py:136(err_set_none)
        8    0.000    0.000    0.001    0.000 funcdesc.py:130(_from_python_function)
        1    0.000    0.000    0.001    0.001 mohoinv.py:236(__init__)
       16    0.000    0.000    0.000    0.000 codegen.py:180(get_function)
       14    0.000    0.000    0.000    0.000 {__import__}
        7    0.000    0.000    0.000    0.000 sre_compile.py:228(_compile_charset)
       10    0.000    0.000    0.001    0.000 pythonapi.py:158(raise_missing_global_error)
        9    0.000    0.000    0.000    0.000 mohoinv.py:443(relief)
       14    0.000    0.000    0.000    0.000 values.py:109(literal_struct)
       10    0.000    0.000    0.001    0.000 objmode.py:399(get_module_dict)
        1    0.000    0.000    0.000    0.000 __init__.py:512(from_function)
        1    0.000    0.000    0.000    0.000 dispatcher.py:22(__init__)
      118    0.000    0.000    0.000    0.000 {_ctypes.sizeof}
      186    0.000    0.000    0.000    0.000 instructions.py:177(lhs)
       24    0.000    0.000    0.000    0.000 type_check.py:237(iscomplexobj)
      200    0.000    0.000    0.000    0.000 interface.py:624(_matvec)
       13    0.000    0.000    0.000    0.000 ir.py:157(inplace_binop)
        8    0.000    0.000    0.000    0.000 {method '_insert' of '_dispatcher.Dispatcher' objects}
       16    0.000    0.000    0.000    0.000 transforms.py:66(slp_vectorize)
       48    0.000    0.000    0.000    0.000 compiler.py:167(add_stage)
       56    0.000    0.000    0.000    0.000 sre_parse.py:206(match)
       15    0.000    0.000    0.000    0.000 builder.py:327(switch)
      178    0.000    0.000    0.000    0.000 types.py:78(post_init)
       28    0.000    0.000    0.000    0.000 numpy_support.py:151(map_layout)
      155    0.000    0.000    0.000    0.000 controlflow.py:369(<genexpr>)
        9    0.000    0.000    0.000    0.000 {numpy.core.multiarray.copyto}
       25    0.000    0.000    0.001    0.000 compressed.py:996(sum_duplicates)
        8    0.000    0.000    0.000    0.000 utils.py:187(safe_diagonal)
       16    0.000    0.000    0.000    0.000 controlflow.py:600(op_FOR_ITER)
        9    0.000    0.000    0.005    0.001 builtins.py:512(real_div_impl)
       42    0.000    0.000    0.000    0.000 cgutils.py:417(__init__)
       15    0.000    0.000    0.001    0.000 interpreter.py:1006(op_COMPARE_OP)
       10    0.000    0.000    0.001    0.000 pythonapi.py:249(number_long)
       11    0.000    0.000    0.001    0.000 builtins.py:17(int_add_impl)
        8    0.000    0.000    0.113    0.014 codegen.py:234(_finalize_specific)
        8    0.000    0.000    0.001    0.000 pythonapi.py:118(raise_object)
       45    0.000    0.000    0.000    0.000 sre_parse.py:149(append)
       23    0.000    0.000    0.000    0.000 base.py:871(make_array)
       50    0.000    0.000    0.000    0.000 _methods.py:28(_amin)
        9    0.000    0.000    0.000    0.000 {numpy.core.multiarray.empty_like}
       47    0.000    0.000    0.000    0.000 pickle.py:250(put)
       24    0.000    0.000    0.003    0.000 imputils.py:169(yield_)
       44    0.000    0.000    0.000    0.000 values.py:442(add_attribute)
       35    0.000    0.000    0.000    0.000 context.py:351(keyfunc)
       87    0.000    0.000    0.000    0.000 ir.py:592(terminator)
       16    0.000    0.000    0.003    0.000 core.py:166(add_function)
        8    0.000    0.000    0.001    0.000 intrinsics.py:9(fix_powi_calls)
       32    0.000    0.000    0.000    0.000 dataflow.py:607(request_outgoing)
       31    0.000    0.000    0.000    0.000 ir.py:348(__init__)
       10    0.000    0.000    0.001    0.000 pythonapi.py:259(long_as_longlong)
       66    0.000    0.000    0.000    0.000 types.py:311(key)
       19    0.000    0.000    0.000    0.000 controlflow.py:592(op_SETUP_LOOP)
       10    0.000    0.000    0.000    0.000 value.py:90(linkage)
       15    0.000    0.000    0.000    0.000 dataflow.py:474(op_POP_JUMP_IF_FALSE)
       32    0.000    0.000    0.000    0.000 typeinfer.py:252(__init__)
       10    0.000    0.000    0.000    0.000 value.py:82(name)
       33    0.000    0.000    0.000    0.000 base.py:960(__getattr__)
       68    0.000    0.000    0.000    0.000 callconv.py:359(_get_excinfo_argument)
       21    0.000    0.000    0.002    0.000 looplifting.py:187(insert_instruction)
       11    0.000    0.000    0.000    0.000 core.py:135(array)
       42    0.000    0.000    0.001    0.000 interpreter.py:912(op_BINARY_ADD)
       31    0.000    0.000    0.000    0.000 types.py:376(overloaded)
       21    0.000    0.000    0.000    0.000 dispatcher.py:148(is_compiling)
       21    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
        9    0.000    0.000    0.000    0.000 __init__.py:237(__init__)
        1    0.000    0.000    0.000    0.000 base.py:399(config)
        3    0.000    0.000    0.000    0.000 dataflow.py:82(dup_topx)
      236    0.000    0.000    0.000    0.000 __init__.py:270(default)
        7    0.000    0.000    0.000    0.000 options.py:23(parse_as_flags)
       56    0.000    0.000    0.000    0.000 string.py:222(lower)
        8    0.000    0.000    0.087    0.011 codegen.py:78(_optimize_final_module)
        8    0.000    0.000    0.002    0.000 models.py:692(__init__)
        7    0.000    0.000    0.011    0.002 tokenize.py:156(tokenize)
       97    0.000    0.000    0.000    0.000 interpreter.py:443(code_consts)
        3    0.000    0.000    0.001    0.000 sre_parse.py:706(parse)
       12    0.000    0.000    0.012    0.001 imputils.py:130(iternext_wrapper)
        3    0.000    0.000    0.002    0.001 sre_compile.py:567(compile)
       68    0.000    0.000    0.000    0.000 core.py:70(double)
        5    0.000    0.000    0.000    0.000 numerictypes.py:736(issubdtype)
       22    0.000    0.000    0.000    0.000 core.py:123(undef)
       28    0.000    0.000    0.000    0.000 sigutils.py:10(normalize_signature)
        5    0.000    0.000    0.005    0.001 arrayobj.py:333(setitem_array1d)
        7    0.000    0.000    1.554    0.222 compiler.py:553(compile_extra)
       60    0.000    0.000    0.000    0.000 looplifting.py:63(__init__)
        3    0.000    0.000    0.000    0.000 castgraph.py:103(propagate)
       64    0.000    0.000    0.000    0.000 {bin}
       15    0.000    0.000    0.000    0.000 controlflow.py:605(_op_ABSOLUTE_JUMP_IF)
       39    0.000    0.000    0.000    0.000 looplifting.py:107(__repr__)
       42    0.000    0.000    0.001    0.000 cgutils.py:425(__exit__)
       11    0.000    0.000    0.002    0.000 controlflow.py:335(_find_dominators)
       16    0.000    0.000    0.000    0.000 ir.py:207(iternext)
        5    0.000    0.000    0.000    0.000 dispatcher.py:144(get_overload)
       14    0.000    0.000    0.000    0.000 base.py:541(get_value_as_argument)
       24    0.000    0.000    0.000    0.000 bytecode.py:180(get)
       22    0.000    0.000    0.000    0.000 ir.py:259(__init__)
        7    0.000    0.000    0.001    0.000 npyfuncs.py:949(np_real_cos_impl)
        1    0.000    0.000    0.002    0.002 objmode.py:47(pre_lower)
       32    0.000    0.000    0.000    0.000 ffi.py:144(__exit__)
        8    0.000    0.000    0.000    0.000 funcdesc.py:92(llvm_cpython_wrapper_name)
       14    0.000    0.000    0.000    0.000 genericpath.py:23(exists)
       14    0.000    0.000    0.000    0.000 {imp.get_suffixes}
       21    0.000    0.000    0.209    0.010 codegen.py:60(_ensure_finalized)
       16    0.000    0.000    0.000    0.000 ir.py:202(getiter)
       42    0.000    0.000    0.000    0.000 compressed.py:1028(__set_sorted)
        8    0.000    0.000    0.000    0.000 {numba._dynfunc.make_function}
       28    0.000    0.000    0.000    0.000 inspect.py:59(isclass)
       18    0.000    0.000    0.000    0.000 builder.py:59(__init__)
       10    0.000    0.000    0.001    0.000 pythonapi.py:188(dict_getitem)
       16    0.000    0.000    0.000    0.000 ir.py:197(pair_second)
       16    0.000    0.000    0.000    0.000 ir.py:192(pair_first)
       96    0.000    0.000    0.000    0.000 {abs}
        3    0.000    0.000    0.000    0.000 {_warnings.warn_explicit}
        1    0.000    0.000    0.000    0.000 base.py:374(__init__)
        3    0.000    0.000    0.000    0.000 interpreter.py:782(op_LOAD_DEREF)
       21    0.000    0.000    0.000    0.000 core.py:111(real)
        7    0.000    0.000    0.000    0.000 options.py:13(from_dict)
        6    0.000    0.000    0.000    0.000 numerictypes.py:949(_can_coerce_all)
       19    0.000    0.000    0.000    0.000 dataflow.py:519(op_POP_BLOCK)
       58    0.000    0.000    0.000    0.000 dataflow.py:638(terminator)
       19    0.000    0.000    0.000    0.000 looplifting.py:68(next)
       21    0.000    0.000    0.000    0.000 utils.py:168(is_owned)
       32    0.000    0.000    0.006    0.000 models.py:390(as_argument)
        7    0.000    0.000    0.000    0.000 compiler.py:600(legalize_return_type)
       31    0.000    0.000    0.000    0.000 types.py:351(_get_object)
        7    0.000    0.000    0.000    0.000 pythonapi.py:648(object_getattr)
       24    0.000    0.000    0.000    0.000 sre_parse.py:92(__init__)
       56    0.000    0.000    0.000    0.000 macro.py:63(<genexpr>)
       16    0.000    0.000    0.000    0.000 core.py:198(new)
       23    0.000    0.000    0.000    0.000 {method 'acquire' of 'thread.lock' objects}
      128    0.000    0.000    0.000    0.000 types.py:334(key)
      135    0.000    0.000    0.000    0.000 ffi.py:63(__enter__)
        8    0.000    0.000    0.021    0.003 <string>:1(cgs)
       12    0.000    0.000    0.000    0.000 builder.py:185(neg)
       11    0.000    0.000    0.000    0.000 ir.py:212(exhaust_iter)
        6    0.000    0.000    0.000    0.000 pythonapi.py:237(float_from_double)
       19    0.000    0.000    0.000    0.000 interpreter.py:998(op_POP_BLOCK)
        7    0.000    0.000    1.554    0.222 compiler.py:292(compile_extra)
      196    0.000    0.000    0.000    0.000 models.py:160(from_argument)
       22    0.000    0.000    0.005    0.000 models.py:393(from_argument)
       19    0.000    0.000    0.000    0.000 controlflow.py:597(op_POP_BLOCK)
        8    0.000    0.000    0.001    0.000 codegen.py:292(create_library)
        7    0.000    0.000    0.000    0.000 linecache.py:33(getlines)
       23    0.000    0.000    0.000    0.000 utils.py:176(__exit__)
       11    0.000    0.000    0.000    0.000 pickle.py:486(save_string)
       28    0.000    0.000    0.000    0.000 imputils.py:306(match)
       13    0.000    0.000    0.001    0.000 transforms.py:10(visit_Function)
       54    0.000    0.000    0.000    0.000 base.py:428(__getitem__)
        7    0.000    0.000    1.127    0.161 compiler.py:503(stage_nopython_backend)
       22    0.000    0.000    0.000    0.000 transforms.py:52(visit_Call)
        7    0.000    0.000    0.000    0.000 base.py:535(get_return_value)
       11    0.000    0.000    0.001    0.000 types.py:305(format_const)
       13    0.000    0.000    0.000    0.000 bytecode.py:285(__iter__)
       24    0.000    0.000    0.000    0.000 imputils.py:149(__init__)
        5    0.000    0.000    0.000    0.000 callconv.py:287(return_status_propagate)
        3    0.000    0.000    0.000    0.000 interpreter.py:581(op_BUILD_SLICE)
       35    0.000    0.000    0.000    0.000 inspect.py:67(ismethod)
       15    0.000    0.000    0.000    0.000 core.py:242(switch)
       26    0.000    0.000    0.000    0.000 __init__.py:364(__init__)
       60    0.000    0.000    0.000    0.000 {method 'itervalues' of 'dict' objects}
        7    0.000    0.000    0.000    0.000 copy_reg.py:92(__newobj__)
       30    0.000    0.000    0.000    0.000 typeinfer.py:196(__init__)
        8    0.000    0.000    0.000    0.000 callwrapper.py:13(__init__)
       24    0.000    0.000    0.000    0.000 dia.py:275(isspmatrix_dia)
       21    0.000    0.000    0.000    0.000 {_struct.pack}
        8    0.000    0.000    0.001    0.000 data.py:66(copy)
        8    0.000    0.000    0.001    0.000 pythonapi.py:784(return_none)
       14    0.000    0.000    0.000    0.000 types.py:334(format_const)
        1    0.000    0.000    0.000    0.000 compiler.py:351(dispatcher_factory)
        1    0.000    0.000    0.391    0.391 compiler.py:480(stage_objectmode_backend)
       15    0.000    0.000    0.000    0.000 interpreter.py:1033(op_POP_JUMP_IF_FALSE)
       16    0.000    0.000    0.000    0.000 builtins.py:504(real_sub_impl)
       24    0.000    0.000    0.000    0.000 module.py:82(get_identified_types)
       16    0.000    0.000    0.000    0.000 dataflow.py:624(tos)
        8    0.000    0.000    0.001    0.000 pythonapi.py:725(make_none)
       12    0.000    0.000    0.000    0.000 compiler.py:161(create_pipeline)
        3    0.000    0.000    0.000    0.000 castgraph.py:47(insert)
        3    0.000    0.000    0.000    0.000 pythonapi.py:500(tuple_new)
       57    0.000    0.000    0.000    0.000 ufunc_db.py:18(_lazy_init_db)
        2    0.000    0.000    0.000    0.000 imputils.py:25(wrapper)
        9    0.000    0.000    0.001    0.000 base.py:378(__rmul__)
       15    0.000    0.000    0.000    0.000 instructions.py:139(__init__)
        4    0.000    0.000    0.000    0.000 models.py:319(get_data_type)
       42    0.000    0.000    0.000    0.000 inspect.py:142(isfunction)
       16    0.000    0.000    0.000    0.000 interpreter.py:915(op_BINARY_SUBTRACT)
       32    0.000    0.000    0.000    0.000 codegen.py:55(_raise_if_finalized)
        4    0.000    0.000    0.000    0.000 npyfuncs.py:922(np_real_sin_impl)
        3    0.000    0.000    0.001    0.000 objmode.py:409(get_env_const)
        3    0.000    0.000    0.000    0.000 typeconv.py:86(_cb_update)
        7    0.000    0.000    0.000    0.000 instructions.py:76(replace_callee)
       26    0.000    0.000    0.000    0.000 looplifting.py:98(__eq__)
        8    0.000    0.000    0.000    0.000 funcdesc.py:26(default_mangler)
        6    0.000    0.000    0.000    0.000 models.py:667(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:55(signature)
        5    0.000    0.000    0.000    0.000 {method 'values' of 'dictproxy' objects}
        3    0.000    0.000    0.000    0.000 typeconv.py:19(set_compatible)
       25    0.000    0.000    0.001    0.000 base.py:670(__call__)
       35    0.000    0.000    0.000    0.000 inspect.py:209(iscode)
       14    0.000    0.000    0.000    0.000 npyimpl.py:104(return_val)
       11    0.000    0.000    0.000    0.000 ir.py:232(cast)
        8    0.000    0.000    0.000    0.000 codegen.py:106(create_ir_module)
       19    0.000    0.000    0.000    0.000 controlflow.py:440(<lambda>)
       34    0.000    0.000    0.000    0.000 callconv.py:356(_get_return_argument)
       21    0.000    0.000    0.000    0.000 argpacker.py:82(argument_types)
        1    0.000    0.000    0.001    0.001 regularization.py:273(hessian)
        9    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        3    0.000    0.000    0.000    0.000 interpreter.py:746(op_DUP_TOPX)
        7    0.000    0.000    0.000    0.000 inspect.py:155(isgeneratorfunction)
       16    0.000    0.000    0.000    0.000 interface.py:621(__init__)
        3    0.000    0.000    0.000    0.000 interpreter.py:1045(op_RAISE_VARARGS)
        8    0.000    0.000    0.000    0.000 cpu.py:38(create_module)
       15    0.000    0.000    0.000    0.000 utils.py:69(set)
       21    0.000    0.000    0.000    0.000 typeinfer.py:131(__init__)
       23    0.000    0.000    0.000    0.000 values.py:189(get_reference)
       19    0.000    0.000    0.000    0.000 ir.py:628(__init__)
        1    0.000    0.000    0.000    0.000 arrayobj.py:31(populate_array)
       25    0.000    0.000    0.000    0.000 sputils.py:228(isdense)
       40    0.000    0.000    0.000    0.000 sre_parse.py:137(__len__)
        5    0.000    0.000    0.000    0.000 {method 'mro' of 'type' objects}
       13    0.000    0.000    0.000    0.000 cgutils.py:257(_getvalue)
       10    0.000    0.000    0.000    0.000 types.py:366(__hash__)
       18    0.000    0.000    0.000    0.000 builtins.py:406(<genexpr>)
        9    0.000    0.000    0.000    0.000 compiler.py:156(__init__)
       28    0.000    0.000    0.000    0.000 inspect.py:191(isframe)
        3    0.000    0.000    0.000    0.000 pythonapi.py:464(list_getitem)
       67    0.000    0.000    0.000    0.000 {thread.get_ident}
       87    0.000    0.000    0.000    0.000 lowering.py:66(pre_block)
        9    0.000    0.000    0.000    0.000 tesseroid.py:242(_get_engine)
        7    0.000    0.000    0.000    0.000 sre_compile.py:428(_simple)
       56    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
       27    0.000    0.000    0.000    0.000 base.py:431(__iter__)
       74    0.000    0.000    0.000    0.000 copy.py:198(_deepcopy_atomic)
        1    0.000    0.000    0.000    0.000 regularization.py:269(__init__)
        9    0.000    0.000    0.000    0.000 linalg.py:111(isComplexType)
       12    0.000    0.000    0.000    0.000 types.py:867(__iter__)
       28    0.000    0.000    0.000    0.000 inspect.py:181(istraceback)
        8    0.000    0.000    0.000    0.000 base.py:389(get_constant_null)
        1    0.000    0.000   42.119   42.119 base.py:389(fit)
       11    0.000    0.000    0.000    0.000 dataflow.py:18(__init__)
       21    0.000    0.000    0.000    0.000 types.py:248(format_const)
        2    0.000    0.000    0.001    0.000 transforms.py:5(visit)
        1    0.000    0.000    0.000    0.000 misfit.py:99(copy)
        9    0.000    0.000    0.000    0.000 interpreter.py:951(op_INPLACE_ADD)
       21    0.000    0.000    0.000    0.000 callconv.py:344(get_arguments)
        8    0.000    0.000    0.004    0.000 pythonapi.py:321(long_from_longlong)
       14    0.000    0.000    0.000    0.000 npyimpl.py:240(__init__)
       21    0.000    0.000    0.000    0.000 types.py:210(_format_double)
        8    0.000    0.000    0.000    0.000 six.py:558(iteritems)
       36    0.000    0.000    0.000    0.000 mohoinv.py:449(reference)
        7    0.000    0.000    0.001    0.000 re.py:192(compile)
        2    0.000    0.000    0.000    0.000 base.py:155(config)
       62    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
       62    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
       20    0.000    0.000    0.000    0.000 typeinfer.py:279(__init__)
        7    0.000    0.000    0.000    0.000 funcdesc.py:147(from_specialized_function)
        2    0.000    0.000    0.000    0.000 models.py:403(from_return)
        8    0.000    0.000    0.000    0.000 callwrapper.py:75(__init__)
       30    0.000    0.000    0.000    0.000 instructions.py:144(value)
        8    0.000    0.000    0.000    0.000 utils.py:83(postprocess)
       52    0.000    0.000    0.000    0.000 base.py:809(get_dummy_type)
        9    0.000    0.000    0.000    0.000 utils.py:66(__init__)
        3    0.000    0.000    0.000    0.000 {numba.typeconv._typeconv.set_compatible}
        5    0.000    0.000    0.000    0.000 numerictypes.py:668(issubclass_)
        3    0.000    0.000    0.000    0.000 dataflow.py:443(op_BUILD_SLICE)
       16    0.000    0.000    0.000    0.000 funcdesc.py:85(llvm_func_name)
       22    0.000    0.000    0.000    0.000 ir.py:60(__init__)
       21    0.000    0.000    0.000    0.000 {_struct.unpack}
        3    0.000    0.000    0.000    0.000 {_sre.compile}
        1    0.000    0.000    0.001    0.001 arrayobj.py:351(setitem_array_unituple)
        8    0.000    0.000    0.000    0.000 sre_parse.py:74(opengroup)
       11    0.000    0.000    0.000    0.000 interpreter.py:128(_fill_global_scope)
        2    0.000    0.000    0.000    0.000 regularization.py:64(copy)
        2    0.000    0.000    0.000    0.000 posixpath.py:61(join)
       49    0.000    0.000    0.000    0.000 looplifting.py:324(<genexpr>)
        2    0.000    0.000    0.000    0.000 functools.py:17(update_wrapper)
       11    0.000    0.000    0.000    0.000 {method 'find' of 'bytearray' objects}
        1    0.000    0.000    0.390    0.390 compiler.py:427(backend_object_mode)
        2    0.000    0.000    0.000    0.000 typeinfer.py:25(__init__)
       24    0.000    0.000    0.000    0.000 {method 'sort' of 'numpy.ndarray' objects}
       19    0.000    0.000    0.000    0.000 dataflow.py:539(__init__)
        3    0.000    0.000    0.001    0.000 sre_compile.py:552(_code)
       10    0.000    0.000    0.000    0.000 __init__.py:383(__getitem__)
        1    0.000    0.000    0.000    0.000 dispatcher.py:338(__init__)
       10    0.000    0.000    0.000    0.000 __init__.py:321(__call__)
       10    0.000    0.000    0.000    0.000 __init__.py:633(__new__)
       17    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
        1    0.000    0.000    0.000    0.000 base.py:77(regul_param)
        1    0.000    0.000    0.000    0.000 builtins.py:1103(slice0_empty_impl)
        2    0.000    0.000    0.000    0.000 types.py:1032(__init__)
        2    0.000    0.000    0.000    0.000 posixpath.py:329(normpath)
        8    0.000    0.000    0.000    0.000 callconv.py:96(init_call_helper)
        8    0.000    0.000    0.000    0.000 bytecode.py:30(get_code_object)
        1    0.000    0.000    0.000    0.000 posixpath.py:424(relpath)
        1    0.000    0.000    0.000    0.000 builtins.py:1138(getiter_unituple)
        9    0.000    0.000    0.000    0.000 compiler.py:138(__init__)
        7    0.000    0.000    0.000    0.000 bytecode.py:18(get_function_object)
        6    0.000    0.000    0.000    0.000 builtins.py:680(real_le_impl)
        2    0.000    0.000    0.000    0.000 module.py:39(functions)
       24    0.000    0.000    0.000    0.000 types.py:938(<genexpr>)
        3    0.000    0.000    0.005    0.002 objmode.py:347(lower_const)
        3    0.000    0.000    0.000    0.000 castgraph.py:139(safe)
       14    0.000    0.000    0.000    0.000 typeinfer.py:181(__init__)
        8    0.000    0.000    0.000    0.000 core.py:192(intrinsic)
        1    0.000    0.000    0.000    0.000 base.py:113(__mul__)
       14    0.000    0.000    0.000    0.000 {cStringIO.StringIO}
        3    0.000    0.000    0.000    0.000 numerictypes.py:970(find_common_type)
        1    0.000    0.000    0.000    0.000 base.py:101(__add__)
        1    0.000    0.000    0.000    0.000 misfit.py:84(__init__)
        1    0.000    0.000    0.000    0.000 models.py:396(as_return)
       43    0.000    0.000    0.000    0.000 npydecl.py:79(<genexpr>)
       28    0.000    0.000    0.000    0.000 npyfuncs.py:37(<genexpr>)
        3    0.000    0.000    0.000    0.000 castgraph.py:73(__iter__)
        1    0.000    0.000    0.000    0.000 cgutils.py:611(get_range_from_slice)
        3    0.000    0.000    0.000    0.000 typeconv.py:32(set_safe_convert)
       10    0.000    0.000    0.000    0.000 __init__.py:506(<genexpr>)
       35    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
       11    0.000    0.000    0.000    0.000 ir.py:326(__init__)
       19    0.000    0.000    0.000    0.000 dataflow.py:94(add_syntax_block)
        5    0.000    0.000    0.000    0.000 codegen.py:114(add_linking_library)
        2    0.000    0.000    0.000    0.000 posixpath.py:358(abspath)
        8    0.000    0.000    0.001    0.000 compressed.py:358(__radd__)
       14    0.000    0.000    0.000    0.000 typeinfer.py:166(__init__)
       43    0.000    0.000    0.000    0.000 npydecl.py:60(<genexpr>)
        8    0.000    0.000    0.000    0.000 <string>:8(__new__)
       24    0.000    0.000    0.000    0.000 cgutils.py:694(is_struct)
       13    0.000    0.000    0.000    0.000 values.py:416(is_declaration)
        7    0.000    0.000    0.000    0.000 inspect.py:634(__init__)
        1    0.000    0.000    0.000    0.000 base.py:575(__init__)
       14    0.000    0.000    0.000    0.000 npyimpl.py:101(store_data)
        3    0.000    0.000    0.000    0.000 objmode.py:484(init_vars)
        6    0.000    0.000    0.000    0.000 sre_compile.py:546(isstring)
        4    0.000    0.000    0.000    0.000 builtins.py:450(generic)
        1    0.000    0.000    0.000    0.000 pythonapi.py:487(tuple_pack)
       11    0.000    0.000    0.000    0.000 controlflow.py:102(set_entry_point)
        1    0.000    0.000    0.000    0.000 __init__.py:474(__init__)
       11    0.000    0.000    0.000    0.000 controlflow.py:631(op_RETURN_VALUE)
        3    0.000    0.000    0.000    0.000 fromnumeric.py:1852(all)
        7    0.000    0.000    0.000    0.000 types.py:164(__eq__)
        1    0.000    0.000    0.001    0.001 mohoinv.py:493(copy)
        2    0.000    0.000    0.000    0.000 cgutils.py:527(pack_array)
        2    0.000    0.000    0.000    0.000 npyfuncs.py:1130(np_real_acos_impl)
        9    0.000    0.000    0.000    0.000 mohoinv.py:465(__iter__)
        3    0.000    0.000    0.000    0.000 imputils.py:30(res)
        6    0.000    0.000    0.000    0.000 controlflow.py:627(op_JUMP_FORWARD)
        3    0.000    0.000    0.000    0.000 dataflow.py:128(op_ROT_THREE)
       20    0.000    0.000    0.000    0.000 {method 'iteritems' of 'dict' objects}
        3    0.000    0.000    0.000    0.000 typeconv.py:59(safe)
       60    0.000    0.000    0.000    0.000 looplifting.py:41(<genexpr>)
        5    0.000    0.000    0.000    0.000 sre_parse.py:268(_escape)
        3    0.000    0.000    0.000    0.000 dataflow.py:523(op_RAISE_VARARGS)
        7    0.000    0.000    0.000    0.000 base.py:103(append)
       20    0.000    0.000    0.000    0.000 module.py:66(<genexpr>)
        8    0.000    0.000    0.000    0.000 callwrapper.py:50(emit_cleanup)
        8    0.000    0.000    0.000    0.000 utils.py:22(coerce)
       16    0.000    0.000    0.000    0.000 passes.py:17(_inlining_threshold)
        3    0.000    0.000    0.000    0.000 interpreter.py:994(op_JUMP_FORWARD)
        3    0.000    0.000    0.000    0.000 interpreter.py:433(get_closure_value)
        2    0.000    0.000    1.892    0.946 compiler.py:566(compile_bytecode)
        9    0.000    0.000    0.000    0.000 compiler.py:173(finalize)
       43    0.000    0.000    0.000    0.000 npydecl.py:56(<genexpr>)
        3    0.000    0.000    0.000    0.000 interpreter.py:954(op_INPLACE_SUBTRACT)
        9    0.000    0.000    0.000    0.000 utils.py:117(__len__)
        1    0.000    0.000    0.000    0.000 regularization.py:58(__init__)
       33    0.000    0.000    0.000    0.000 typeinfer.py:449(<genexpr>)
        1    0.000    0.000    0.000    0.000 cgutils.py:602(normalize_slice)
        3    0.000    0.000    0.000    0.000 castgraph.py:18(__lt__)
        2    0.000    0.000    0.000    0.000 builtins.py:33(int_mul_impl)
       11    0.000    0.000    0.000    0.000 controlflow.py:164(backbone)
        1    0.000    0.000    0.000    0.000 ir.py:47(strformat)
        1    0.000    0.000    0.000    0.000 cpu.py:82(get_env_body)
        8    0.000    0.000    0.000    0.000 interpreter.py:933(op_BINARY_POWER)
       23    0.000    0.000    0.000    0.000 {method 'release' of 'thread.lock' objects}
        1    0.000    0.000    0.001    0.001 arrayobj.py:110(getiter_array)
        9    0.000    0.000    0.000    0.000 core.py:66(float)
       30    0.000    0.000    0.000    0.000 types.py:140(coerce)
        1    0.000    0.000    0.000    0.000 funcdesc.py:158(from_object_mode_function)
       27    0.000    0.000    0.000    0.000 controlflow.py:199(topo_order)
       38    0.000    0.000    0.000    0.000 models.py:157(from_data)
        2    0.000    0.000    0.001    0.000 transforms.py:58(replace_all_calls)
        5    0.000    0.000    0.000    0.000 types.py:383(pysig)
        7    0.000    0.000    0.000    0.000 options.py:10(__init__)
        2    0.000    0.000    0.000    0.000 numpy_support.py:134(map_arrayscalar_type)
        1    0.000    0.000    0.000    0.000 templates.py:231(__init__)
        8    0.000    0.000    0.000    0.000 sre_parse.py:85(closegroup)
        9    0.000    0.000    0.001    0.000 interpreter.py:924(op_BINARY_TRUE_DIVIDE)
        8    0.000    0.000    0.006    0.001 pythonapi.py:948(from_native_return)
        1    0.000    0.000    0.000    0.000 base.py:408(_unpack_components)
       10    0.000    0.000    0.000    0.000 types.py:357(key)
        3    0.000    0.000    0.000    0.000 dataflow.py:111(op_DUP_TOPX)
        2    0.000    0.000    0.000    0.000 compiler.py:176(_patch_error)
        6    0.000    0.000    0.000    0.000 castgraph.py:44(__init__)
       13    0.000    0.000    0.000    0.000 models.py:51(get_return_type)
        6    0.000    0.000    0.000    0.000 builtins.py:1129(make_unituple_iter)
        3    0.000    0.000    0.000    0.000 models.py:326(get_return_type)
        8    0.000    0.000    0.000    0.000 arrayobj.py:102(make_arrayiter_cls)
        1    0.000    0.000    0.000    0.000 arrayobj.py:466(array_len)
       21    0.000    0.000    0.000    0.000 dispatcher.py:89(nopython_signatures)
        2    0.000    0.000    0.000    0.000 transforms.py:46(__init__)
        3    0.000    0.000    0.000    0.000 objmode.py:63(pre_block)
        7    0.000    0.000    0.000    0.000 base.py:60(__init__)
        3    0.000    0.000    0.000    0.000 sre_parse.py:189(__init__)
        8    0.000    0.000    0.000    0.000 cpu.py:65(jit_codegen)
        3    0.000    0.000    0.000    0.000 dataflow.py:219(op_LOAD_DEREF)
        1    0.000    0.000    0.000    0.000 cpu.py:68(call_conv)
        9    0.000    0.000    0.000    0.000 typeinfer.py:315(set_context)
        1    0.000    0.000    0.000    0.000 arrayobj.py:653(array_size)
       21    0.000    0.000    0.000    0.000 module.py:176(__iter__)
        3    0.000    0.000    0.000    0.000 sre_parse.py:67(__init__)
        6    0.000    0.000    0.000    0.000 castgraph.py:24(__eq__)
        1    0.000    0.000    0.000    0.000 builtins.py:1117(slice0_none_none_impl)
        8    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
        6    0.000    0.000    0.000    0.000 typeinfer.py:149(__init__)
       14    0.000    0.000    0.000    0.000 npyimpl.py:98(load_data)
        2    0.000    0.000    0.000    0.000 utils.py:87(copy)
        2    0.000    0.000    0.000    0.000 {method 'throw' of 'generator' objects}
       23    0.000    0.000    0.000    0.000 types.py:79(__str__)
       14    0.000    0.000    0.000    0.000 npyimpl.py:95(create_iter_indices)
        2    0.000    0.000    0.000    0.000 builtins.py:226(int_sgt_impl)
       22    0.000    0.000    0.000    0.000 cgutils.py:145(_getpointer)
        1    0.000    0.000    0.000    0.000 pythonapi.py:674(object_getitem)
        3    0.000    0.000    0.000    0.000 ir.py:422(__init__)
        1    0.000    0.000    0.000    0.000 cgutils.py:619(get_strides_from_slice)
        9    0.000    0.000    0.000    0.000 typeinfer.py:98(__init__)
        1    0.000    0.000    0.000    0.000 objmode.py:585(_finalize_frozen_string)
        1    0.000    0.000    0.000    0.000 genericpath.py:76(commonprefix)
       14    0.000    0.000    0.000    0.000 {method 'getvalue' of 'cStringIO.StringO' objects}
       47    0.000    0.000    0.000    0.000 pickle.py:333(persistent_id)
       14    0.000    0.000    0.000    0.000 callconv.py:350(get_env_argument)
        1    0.000    0.000    0.000    0.000 builtins.py:665(real_power_impl)
        5    0.000    0.000    0.000    0.000 models.py:255(get_return_type)
        1    0.000    0.000    0.000    0.000 dispatcher.py:202(__repr__)
        7    0.000    0.000    0.000    0.000 sre_parse.py:145(__setitem__)
        4    0.000    0.000    0.000    0.000 {sys._getframe}
        1    0.000    0.000    0.000    0.000 npyfuncs.py:815(np_real_sqrt_impl)
        1    0.000    0.000    0.000    0.000 pythonapi.py:495(tuple_size)
        2    0.000    0.000    0.000    0.000 functools.py:39(wraps)
        1    0.000    0.000    0.000    0.000 dispatcher.py:57(_make_finalizer)
        4    0.000    0.000    0.000    0.000 builtins.py:475(resolve_size)
        1    0.000    0.000    0.000    0.000 base.py:659(__init__)
        4    0.000    0.000    0.000    0.000 {numpy.core.multiarray.promote_types}
        3    0.000    0.000    0.000    0.000 castgraph.py:59(get)
        1    0.000    0.000    0.000    0.000 builtins.py:25(int_sub_impl)
        3    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 utils.py:291(_op_or_eq)
        7    0.000    0.000    0.000    0.000 instructions.py:68(callee)
        2    0.000    0.000    0.000    0.000 core.py:86(array)
        2    0.000    0.000    0.000    0.000 utils.py:280(_not_op)
        7    0.000    0.000    0.000    0.000 lowering.py:53(init)
        1    0.000    0.000    0.000    0.000 utils.py:151(__init__)
        7    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 utils.py:74(unset)
        1    0.000    0.000    0.000    0.000 utils.py:195(__get__)
        1    0.000    0.000    0.001    0.001 pythonapi.py:317(long_from_ssize_t)
        1    0.000    0.000    0.000    0.000 models.py:675(__init__)
        3    0.000    0.000    0.000    0.000 interpreter.py:139(get_block_entry_vars)
        9    0.000    0.000    0.000    0.000 funcdesc.py:164(<lambda>)
        1    0.000    0.000    0.000    0.000 typeconv.py:35(get_pointer)
        1    0.000    0.000    0.000    0.000 pythonapi.py:445(sequence_tuple)
        1    0.000    0.000    0.000    0.000 {posix.getcwd}
        1    0.000    0.000    0.000    0.000 base.py:126(__rmul__)
        3    0.000    0.000    0.000    0.000 ir.py:314(__init__)
        1    0.000    0.000    0.000    0.000 builtins.py:230(int_sge_impl)
        1    0.000    0.000    0.000    0.000 numeric.py:516(ascontiguousarray)
       34    0.000    0.000    0.000    0.000 common.py:13(_decode_string)
        2    0.000    0.000    0.000    0.000 imputils.py:24(impl_attribute)
        2    0.000    0.000    0.000    0.000 utils.py:351(<lambda>)
        1    0.000    0.000    0.000    0.000 objmode.py:60(post_lower)
       14    0.000    0.000    0.000    0.000 npyimpl.py:61(update_indices)
        4    0.000    0.000    0.000    0.000 models.py:154(as_return)
        1    0.000    0.000    0.000    0.000 objmode.py:41(init)
        1    0.000    0.000    0.000    0.000 cgutils.py:721(is_neg_int)
        2    0.000    0.000    0.000    0.000 utils.py:352(<lambda>)
       14    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {numba.typeconv._typeconv.get_pointer}
        2    0.000    0.000    0.000    0.000 base.py:383(<genexpr>)
        1    0.000    0.000    0.000    0.000 lowering.py:275(lower_raise)
        3    0.000    0.000    0.000    0.000 controlflow.py:635(op_RAISE_VARARGS)
        2    0.000    0.000    0.000    0.000 base.py:379(<genexpr>)
        1    0.000    0.000    0.000    0.000 cgutils.py:317(alloca_once_value)
        3    0.000    0.000    0.000    0.000 _methods.py:40(_all)
        7    0.000    0.000    0.000    0.000 bytecode.py:224(__iter__)
        6    0.000    0.000    0.000    0.000 types.py:881(coerce)
        3    0.000    0.000    0.000    0.000 interpreter.py:455(code_freevars)
        4    0.000    0.000    0.000    0.000 types.py:1038(key)
        2    0.000    0.000    0.000    0.000 {sys.exc_info}
       11    0.000    0.000    0.000    0.000 controlflow.py:193(nodes)
        1    0.000    0.000    0.000    0.000 {method 'copy' of 'collections.defaultdict' objects}
        1    0.000    0.000    0.000    0.000 {thread.allocate_lock}
        7    0.000    0.000    0.000    0.000 lowering.py:56(pre_lower)
        1    0.000    0.000    0.000    0.000 interpreter.py:957(op_INPLACE_MULTIPLY)
        1    0.000    0.000    0.000    0.000 compiler.py:151(__init__)
       23    0.000    0.000    0.000    0.000 models.py:148(as_data)
       14    0.000    0.000    0.000    0.000 npyimpl.py:64(as_values)
        2    0.000    0.000    0.000    0.000 compiler.py:258(giveup_context)
        8    0.000    0.000    0.000    0.000 callconv.py:264(_make_call_helper)
        3    0.000    0.000    0.000    0.000 dataflow.py:496(op_JUMP_FORWARD)
        2    0.000    0.000    0.000    0.000 {method 'end' of '_sre.SRE_Match' objects}
        2    0.000    0.000    0.000    0.000 posixpath.py:52(isabs)
        2    0.000    0.000    0.000    0.000 looplifting.py:330(<genexpr>)
        1    0.000    0.000    0.000    0.000 base.py:664(hard_reset)
        5    0.000    0.000    0.000    0.000 types.py:361(__eq__)
        8    0.000    0.000    0.000    0.000 models.py:163(from_return)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        3    0.000    0.000    0.000    0.000 models.py:295(from_return)
        1    0.000    0.000    0.000    0.000 {callable}
        2    0.000    0.000    0.000    0.000 base.py:502(imp)
        1    0.000    0.000    0.000    0.000 callconv.py:53(__init__)
        7    0.000    0.000    0.000    0.000 lowering.py:61(post_lower)
        2    0.000    0.000    0.000    0.000 models.py:292(as_return)